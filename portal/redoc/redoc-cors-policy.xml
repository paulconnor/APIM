<?xml version="1.0" encoding="UTF-8"?>
<exp:Export Version="3.0"
    xmlns:L7p="http://www.layer7tech.com/ws/policy"
    xmlns:exp="http://www.layer7tech.com/ws/policy/export" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <exp:References/>
    <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
        <wsp:All wsp:Usage="Required">
            <L7p:CORS>
                <L7p:AcceptedMethods stringListValue="included">
                    <L7p:item stringValue="GET"/>
                </L7p:AcceptedMethods>
                <L7p:RequireCors booleanValue="false"/>
            </L7p:CORS>
            <L7p:HardcodedResponse>
                <L7p:Base64ResponseBody stringValue="ewogICJzd2FnZ2VyIjogIjIuMCIsCiAgImluZm8iOiB7CiAgICAidmVyc2lvbiI6ICIxLjAiLAogICAgInRpdGxlIjogIlZlZGFTY29yZUFwcGx5IiwKICAgICJsaWNlbnNlIjogewogICAgICAibmFtZSI6ICJNSVQiLAogICAgICAidXJsIjogImh0dHA6Ly9naXRodWIuY29tL2dydW50anMvZ3J1bnQvYmxvYi9tYXN0ZXIvTElDRU5TRS1NSVQiCiAgICB9CiAgfSwKICAiaG9zdCI6ICJ2ZWRheG1sLmNvbSIsCiAgImJhc2VQYXRoIjogIi9zeXMyL3NvYXAxMS92ZWRhc2NvcmUtYXBwbHktdjItMCIsCiAgInNjaGVtZXMiOiBbCiAgICAiaHR0cHMiCiAgXSwKICAiY29uc3VtZXMiOiBbCiAgICAiYXBwbGljYXRpb24vanNvbiIKICBdLAogICJwcm9kdWNlcyI6IFsKICAgICJhcHBsaWNhdGlvbi9qc29uIgogIF0sCiAgInBhdGhzIjogewogICAgIi9zdWJtaXRFbnF1aXJ5IjogewogICAgICAicG9zdCI6IHsKICAgICAgICAic3VtbWFyeSI6ICJzdWJtaXRFbnF1aXJ5IiwKICAgICAgICAidGFncyI6IFsKICAgICAgICAgICJWZWRhU2NvcmVBcHBseVNPQVAxMkJpbmRpbmciCiAgICAgICAgXSwKICAgICAgICAib3BlcmF0aW9uSWQiOiAic3VibWl0RW5xdWlyeTEiLAogICAgICAgICJjb25zdW1lcyI6IFsKICAgICAgICAgICJ0ZXh0L3htbDtjaGFyc2V0PXV0Zi04IgogICAgICAgIF0sCiAgICAgICAgInByb2R1Y2VzIjogWwogICAgICAgICAgInRleHQveG1sO2NoYXJzZXQ9dXRmLTgiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiQm9keSIsCiAgICAgICAgICAgICJpbiI6ICJib2R5IiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbnF1aXJ5UmVxdWVzdCIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlc3BvbnNlcyI6IHsKICAgICAgICAgICIyMDAiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRW5xdWlyeVJlc3BvbnNlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZXhhbXBsZXMiOiB7fQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInNlY3VyaXR5IjogW10sCiAgICAgICAgIngtdW5pdFRlc3RzIjogW10sCiAgICAgICAgIngtb3BlcmF0aW9uLXNldHRpbmdzIjogewogICAgICAgICAgIkNvbGxlY3RQYXJhbWV0ZXJzIjogZmFsc2UsCiAgICAgICAgICAiQWxsb3dEeW5hbWljUXVlcnlQYXJhbWV0ZXJzIjogZmFsc2UsCiAgICAgICAgICAiQWxsb3dEeW5hbWljRm9ybVBhcmFtZXRlcnMiOiBmYWxzZSwKICAgICAgICAgICJJc011bHRpQ29udGVudFN0cmVhbWluZyI6IGZhbHNlCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9zdWJtaXRFbnF1aXJ5QXN5bmMiOiB7CiAgICAgICJwb3N0IjogewogICAgICAgICJzdW1tYXJ5IjogInN1Ym1pdEVucXVpcnlBc3luYyIsCiAgICAgICAgInRhZ3MiOiBbCiAgICAgICAgICAiVmVkYVNjb3JlQXBwbHlTT0FQMTJCaW5kaW5nIgogICAgICAgIF0sCiAgICAgICAgIm9wZXJhdGlvbklkIjogInN1Ym1pdEVucXVpcnlBc3luYzEiLAogICAgICAgICJjb25zdW1lcyI6IFsKICAgICAgICAgICJ0ZXh0L3htbDtjaGFyc2V0PXV0Zi04IgogICAgICAgIF0sCiAgICAgICAgInByb2R1Y2VzIjogWwogICAgICAgICAgInRleHQveG1sO2NoYXJzZXQ9dXRmLTgiCiAgICAgICAgXSwKICAgICAgICAicGFyYW1ldGVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiQm9keSIsCiAgICAgICAgICAgICJpbiI6ICJib2R5IiwKICAgICAgICAgICAgInJlcXVpcmVkIjogdHJ1ZSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbnF1aXJ5UmVxdWVzdEFzeW5jIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVzcG9uc2VzIjogewogICAgICAgICAgIjIwMCI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAgICJzY2hlbWEiOiB7CiAgICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbnF1aXJ5UmVzcG9uc2VBc3luYyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImV4YW1wbGVzIjoge30KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJzZWN1cml0eSI6IFtdLAogICAgICAgICJ4LXVuaXRUZXN0cyI6IFtdLAogICAgICAgICJ4LW9wZXJhdGlvbi1zZXR0aW5ncyI6IHsKICAgICAgICAgICJDb2xsZWN0UGFyYW1ldGVycyI6IGZhbHNlLAogICAgICAgICAgIkFsbG93RHluYW1pY1F1ZXJ5UGFyYW1ldGVycyI6IGZhbHNlLAogICAgICAgICAgIkFsbG93RHluYW1pY0Zvcm1QYXJhbWV0ZXJzIjogZmFsc2UsCiAgICAgICAgICAiSXNNdWx0aUNvbnRlbnRTdHJlYW1pbmciOiBmYWxzZQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvcmV0cmlldmVFbnF1aXJ5QnlJRCI6IHsKICAgICAgInBvc3QiOiB7CiAgICAgICAgInN1bW1hcnkiOiAicmV0cmlldmVFbnF1aXJ5QnlJRCIsCiAgICAgICAgInRhZ3MiOiBbCiAgICAgICAgICAiVmVkYVNjb3JlQXBwbHlTT0FQMTJCaW5kaW5nIgogICAgICAgIF0sCiAgICAgICAgIm9wZXJhdGlvbklkIjogInJldHJpZXZlRW5xdWlyeUJ5SUQxIiwKICAgICAgICAiY29uc3VtZXMiOiBbCiAgICAgICAgICAidGV4dC94bWw7Y2hhcnNldD11dGYtOCIKICAgICAgICBdLAogICAgICAgICJwcm9kdWNlcyI6IFsKICAgICAgICAgICJ0ZXh0L3htbDtjaGFyc2V0PXV0Zi04IgogICAgICAgIF0sCiAgICAgICAgInBhcmFtZXRlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogIkJvZHkiLAogICAgICAgICAgICAiaW4iOiAiYm9keSIsCiAgICAgICAgICAgICJyZXF1aXJlZCI6IHRydWUsCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmV0cmlldmVFbnF1aXJ5UmVxdWVzdEJ5SUQiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZXNwb25zZXMiOiB7CiAgICAgICAgICAiMjAwIjogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgInNjaGVtYSI6IHsKICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1JldHJpZXZlRW5xdWlyeVJlc3BvbnNlQnlJRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImV4YW1wbGVzIjoge30KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJzZWN1cml0eSI6IFtdLAogICAgICAgICJ4LXVuaXRUZXN0cyI6IFtdLAogICAgICAgICJ4LW9wZXJhdGlvbi1zZXR0aW5ncyI6IHsKICAgICAgICAgICJDb2xsZWN0UGFyYW1ldGVycyI6IGZhbHNlLAogICAgICAgICAgIkFsbG93RHluYW1pY1F1ZXJ5UGFyYW1ldGVycyI6IGZhbHNlLAogICAgICAgICAgIkFsbG93RHluYW1pY0Zvcm1QYXJhbWV0ZXJzIjogZmFsc2UsCiAgICAgICAgICAiSXNNdWx0aUNvbnRlbnRTdHJlYW1pbmciOiBmYWxzZQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgImRlZmluaXRpb25zIjogewogICAgIkF1c3RyYWxpYW5TdGF0ZVR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJBdXN0cmFsaWFuU3RhdGVUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkVudW1lcmF0aW9uIG9mIEF1c3RyYWxpYW4gc3RhdGVzXHJcblxuIiwKICAgICAgImV4YW1wbGUiOiAiQUNUIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImVudW0iOiBbCiAgICAgICAgIkFDVCIsCiAgICAgICAgIk5TVyIsCiAgICAgICAgIk5UIiwKICAgICAgICAiTloiLAogICAgICAgICJPUyIsCiAgICAgICAgIk9USCIsCiAgICAgICAgIlFMRCIsCiAgICAgICAgIlNBIiwKICAgICAgICAiVEFTIiwKICAgICAgICAiVklDIiwKICAgICAgICAiV0EiCiAgICAgIF0KICAgIH0sCiAgICAiQ291bnRyeUNvZGVFbnVtVHlwZSI6IHsKICAgICAgInRpdGxlIjogImNvdW50cnlDb2RlRW51bVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiRW51bWVyYXRpb24gb2YgSVNPIDMxNjYtMSBhbHBoYS0zIGNvdW50cnkgY29kZXNcclxuXG4iLAogICAgICAiZXhhbXBsZSI6ICJBQlciLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiQUJXIiwKICAgICAgICAiQUZHIiwKICAgICAgICAiQUdPIiwKICAgICAgICAiQUlBIiwKICAgICAgICAiQUxBIiwKICAgICAgICAiQUxCIiwKICAgICAgICAiQU5EIiwKICAgICAgICAiQVJFIiwKICAgICAgICAiQVJHIiwKICAgICAgICAiQVJNIiwKICAgICAgICAiQVNNIiwKICAgICAgICAiQVRBIiwKICAgICAgICAiQVRGIiwKICAgICAgICAiQVRHIiwKICAgICAgICAiQVVTIiwKICAgICAgICAiQVVUIiwKICAgICAgICAiQVpFIiwKICAgICAgICAiQkRJIiwKICAgICAgICAiQkVMIiwKICAgICAgICAiQkVOIiwKICAgICAgICAiQkVTIiwKICAgICAgICAiQkZBIiwKICAgICAgICAiQkdEIiwKICAgICAgICAiQkdSIiwKICAgICAgICAiQkhSIiwKICAgICAgICAiQkhTIiwKICAgICAgICAiQklIIiwKICAgICAgICAiQkxNIiwKICAgICAgICAiQkxSIiwKICAgICAgICAiQkxaIiwKICAgICAgICAiQk1VIiwKICAgICAgICAiQk9MIiwKICAgICAgICAiQlJBIiwKICAgICAgICAiQlJCIiwKICAgICAgICAiQlJOIiwKICAgICAgICAiQlROIiwKICAgICAgICAiQlZUIiwKICAgICAgICAiQldBIiwKICAgICAgICAiQ0FGIiwKICAgICAgICAiQ0FOIiwKICAgICAgICAiQ0NLIiwKICAgICAgICAiQ0hFIiwKICAgICAgICAiQ0hMIiwKICAgICAgICAiQ0hOIiwKICAgICAgICAiQ0lWIiwKICAgICAgICAiQ01SIiwKICAgICAgICAiQ09EIiwKICAgICAgICAiQ09HIiwKICAgICAgICAiQ09LIiwKICAgICAgICAiQ09MIiwKICAgICAgICAiQ09NIiwKICAgICAgICAiQ1BWIiwKICAgICAgICAiQ1JJIiwKICAgICAgICAiQ1VCIiwKICAgICAgICAiQ1VXIiwKICAgICAgICAiQ1hSIiwKICAgICAgICAiQ1lNIiwKICAgICAgICAiQ1lQIiwKICAgICAgICAiQ1pFIiwKICAgICAgICAiREVVIiwKICAgICAgICAiREpJIiwKICAgICAgICAiRE1BIiwKICAgICAgICAiRE5LIiwKICAgICAgICAiRE9NIiwKICAgICAgICAiRFpBIiwKICAgICAgICAiRUNVIiwKICAgICAgICAiRUdZIiwKICAgICAgICAiRVJJIiwKICAgICAgICAiRVNIIiwKICAgICAgICAiRVNQIiwKICAgICAgICAiRVNUIiwKICAgICAgICAiRVRIIiwKICAgICAgICAiRklOIiwKICAgICAgICAiRkpJIiwKICAgICAgICAiRkxLIiwKICAgICAgICAiRlJBIiwKICAgICAgICAiRlJPIiwKICAgICAgICAiRlNNIiwKICAgICAgICAiR0FCIiwKICAgICAgICAiR0JSIiwKICAgICAgICAiR0VPIiwKICAgICAgICAiR0dZIiwKICAgICAgICAiR0hBIiwKICAgICAgICAiR0lCIiwKICAgICAgICAiR0lOIiwKICAgICAgICAiR0xQIiwKICAgICAgICAiR01CIiwKICAgICAgICAiR05CIiwKICAgICAgICAiR05RIiwKICAgICAgICAiR1JDIiwKICAgICAgICAiR1JEIiwKICAgICAgICAiR1JMIiwKICAgICAgICAiR1RNIiwKICAgICAgICAiR1VGIiwKICAgICAgICAiR1VNIiwKICAgICAgICAiR1VZIiwKICAgICAgICAiSEtHIiwKICAgICAgICAiSE1EIiwKICAgICAgICAiSE5EIiwKICAgICAgICAiSFJWIiwKICAgICAgICAiSFRJIiwKICAgICAgICAiSFVOIiwKICAgICAgICAiSUROIiwKICAgICAgICAiSU1OIiwKICAgICAgICAiSU5EIiwKICAgICAgICAiSU9UIiwKICAgICAgICAiSVJMIiwKICAgICAgICAiSVJOIiwKICAgICAgICAiSVJRIiwKICAgICAgICAiSVNMIiwKICAgICAgICAiSVNSIiwKICAgICAgICAiSVRBIiwKICAgICAgICAiSkFNIiwKICAgICAgICAiSkVZIiwKICAgICAgICAiSk9SIiwKICAgICAgICAiSlBOIiwKICAgICAgICAiS0FaIiwKICAgICAgICAiS0VOIiwKICAgICAgICAiS0daIiwKICAgICAgICAiS0hNIiwKICAgICAgICAiS0lSIiwKICAgICAgICAiS05BIiwKICAgICAgICAiS09SIiwKICAgICAgICAiS1dUIiwKICAgICAgICAiTEFPIiwKICAgICAgICAiTEJOIiwKICAgICAgICAiTEJSIiwKICAgICAgICAiTEJZIiwKICAgICAgICAiTENBIiwKICAgICAgICAiTElFIiwKICAgICAgICAiTEtBIiwKICAgICAgICAiTFNPIiwKICAgICAgICAiTFRVIiwKICAgICAgICAiTFVYIiwKICAgICAgICAiTFZBIiwKICAgICAgICAiTUFDIiwKICAgICAgICAiTUFGIiwKICAgICAgICAiTUFSIiwKICAgICAgICAiTUNPIiwKICAgICAgICAiTURBIiwKICAgICAgICAiTURHIiwKICAgICAgICAiTURWIiwKICAgICAgICAiTUVYIiwKICAgICAgICAiTUhMIiwKICAgICAgICAiTUtEIiwKICAgICAgICAiTUxJIiwKICAgICAgICAiTUxUIiwKICAgICAgICAiTU1SIiwKICAgICAgICAiTU5FIiwKICAgICAgICAiTU5HIiwKICAgICAgICAiTU5QIiwKICAgICAgICAiTU9aIiwKICAgICAgICAiTVJUIiwKICAgICAgICAiTVNSIiwKICAgICAgICAiTVRRIiwKICAgICAgICAiTVVTIiwKICAgICAgICAiTVdJIiwKICAgICAgICAiTVlTIiwKICAgICAgICAiTVlUIiwKICAgICAgICAiTkFNIiwKICAgICAgICAiTkNMIiwKICAgICAgICAiTkVSIiwKICAgICAgICAiTkZLIiwKICAgICAgICAiTkdBIiwKICAgICAgICAiTklDIiwKICAgICAgICAiTklVIiwKICAgICAgICAiTkxEIiwKICAgICAgICAiTk9SIiwKICAgICAgICAiTlBMIiwKICAgICAgICAiTlJVIiwKICAgICAgICAiTlpMIiwKICAgICAgICAiT01OIiwKICAgICAgICAiUEFLIiwKICAgICAgICAiUEFOIiwKICAgICAgICAiUENOIiwKICAgICAgICAiUEVSIiwKICAgICAgICAiUEhMIiwKICAgICAgICAiUExXIiwKICAgICAgICAiUE5HIiwKICAgICAgICAiUE9MIiwKICAgICAgICAiUFJJIiwKICAgICAgICAiUFJLIiwKICAgICAgICAiUFJUIiwKICAgICAgICAiUFJZIiwKICAgICAgICAiUFNFIiwKICAgICAgICAiUFlGIiwKICAgICAgICAiUUFUIiwKICAgICAgICAiUkVVIiwKICAgICAgICAiUk9VIiwKICAgICAgICAiUlVTIiwKICAgICAgICAiUldBIiwKICAgICAgICAiU0FVIiwKICAgICAgICAiU0ROIiwKICAgICAgICAiU0VOIiwKICAgICAgICAiU0dQIiwKICAgICAgICAiU0dTIiwKICAgICAgICAiU0hOIiwKICAgICAgICAiU0pNIiwKICAgICAgICAiU0xCIiwKICAgICAgICAiU0xFIiwKICAgICAgICAiU0xWIiwKICAgICAgICAiU01SIiwKICAgICAgICAiU09NIiwKICAgICAgICAiU1BNIiwKICAgICAgICAiU1JCIiwKICAgICAgICAiU1NEIiwKICAgICAgICAiU1RQIiwKICAgICAgICAiU1VSIiwKICAgICAgICAiU1ZLIiwKICAgICAgICAiU1ZOIiwKICAgICAgICAiU1dFIiwKICAgICAgICAiU1daIiwKICAgICAgICAiU1hNIiwKICAgICAgICAiU1lDIiwKICAgICAgICAiU1lSIiwKICAgICAgICAiVENBIiwKICAgICAgICAiVENEIiwKICAgICAgICAiVEdPIiwKICAgICAgICAiVEhBIiwKICAgICAgICAiVEpLIiwKICAgICAgICAiVEtMIiwKICAgICAgICAiVEtNIiwKICAgICAgICAiVExTIiwKICAgICAgICAiVE9OIiwKICAgICAgICAiVFRPIiwKICAgICAgICAiVFVOIiwKICAgICAgICAiVFVSIiwKICAgICAgICAiVFVWIiwKICAgICAgICAiVFdOIiwKICAgICAgICAiVFpBIiwKICAgICAgICAiVUdBIiwKICAgICAgICAiVUtSIiwKICAgICAgICAiVU1JIiwKICAgICAgICAiVVJZIiwKICAgICAgICAiVVNBIiwKICAgICAgICAiVVpCIiwKICAgICAgICAiVkFUIiwKICAgICAgICAiVkNUIiwKICAgICAgICAiVkVOIiwKICAgICAgICAiVkdCIiwKICAgICAgICAiVklSIiwKICAgICAgICAiVk5NIiwKICAgICAgICAiVlVUIiwKICAgICAgICAiV0xGIiwKICAgICAgICAiV1NNIiwKICAgICAgICAiWUVNIiwKICAgICAgICAiWkFGIiwKICAgICAgICAiWk1CIiwKICAgICAgICAiWldFIiwKICAgICAgICAiWlpaIgogICAgICBdCiAgICB9LAogICAgIkdlbmRlckNvZGV0eXBlIjogewogICAgICAidGl0bGUiOiAiZ2VuZGVyLWNvZGVUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkVudW1lcmF0ZWQgc2ltcGxlVHlwZSBmb3IgYW4gaW5kaXZpZHVhbCdzIGdlbmRlclxyXG5cbiIsCiAgICAgICJleGFtcGxlIjogIk0iLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiTSIsCiAgICAgICAgIkYiLAogICAgICAgICJVIgogICAgICBdCiAgICB9LAogICAgIkdlbmRlclR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJnZW5kZXJUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkVudW1lcmF0ZWQgc2ltcGxlVHlwZSBmb3IgYW4gaW5kaXZpZHVhbCdzIGdlbmRlclxyXG5cbiIsCiAgICAgICJleGFtcGxlIjogIk1hbGUiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiTWFsZSIsCiAgICAgICAgIkZlbWFsZSIsCiAgICAgICAgIlVua25vd24iCiAgICAgIF0KICAgIH0sCiAgICAiQ3VycmVudFByZXZpb3VzVHlwZSI6IHsKICAgICAgInRpdGxlIjogImN1cnJlbnRQcmV2aW91c1R5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiRW51bWVyYXRlZCBzaW1wbGVUeXBlIGZvciBjdXJyZW50IGFuZCBwcmV2aW91cyB2YWx1ZXNcclxuXG4iLAogICAgICAiZXhhbXBsZSI6ICJDIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImVudW0iOiBbCiAgICAgICAgIkMiLAogICAgICAgICJQIgogICAgICBdCiAgICB9LAogICAgIlZhbHVlIjogewogICAgICAidGl0bGUiOiAidmFsdWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInVuaXQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiS2V5VmFsdWVQYWlydHlwZSI6IHsKICAgICAgInRpdGxlIjogImtleS12YWx1ZS1wYWlyVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJDb21wbGV4VHlwZSBmb3IgcmVwcmVzZW50aW5nIGtleS12YWx1ZSBwYWlyc1xyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJrZXkiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVmFsdWUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImtleSIsCiAgICAgICAgInZhbHVlIgogICAgICBdCiAgICB9LAogICAgIkFkZGl0aW9uYWxEYXRhRmllbGRzdHlwZSI6IHsKICAgICAgInRpdGxlIjogImFkZGl0aW9uYWwtZGF0YS1maWVsZHNUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seS4gQ29udGFpbnMgYWRkaXRpb25hbCBkYXRhIGZpZWxkcy4gV2lsbCBiZSB1c2VkIHRvIHJlcG9ydCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLlxyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkYXRhLWZpZWxkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS2V5VmFsdWVQYWlydHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZGF0YS1maWVsZCIKICAgICAgXQogICAgfSwKICAgICJJZFJlZmVyZW5jZXNUeXBlIjogewogICAgICAidGl0bGUiOiAiSWRSZWZlcmVuY2VzVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJMaXN0IG9mIHJlZmVyZW5jZXMgdG8gYXNzb2NpYXRlIHRoZSBzb3VyY2Ugb2YgdGhpcyBpbmZvcm1hdGlvbiB0byB0aGUgaWRlbnRpdHkgZGVmaW5lZCBieSBpZGVudGl0eSBpbmRleC5cclxuXG4iLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaWQtcmVmZXJlbmNlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlJlZmVyZW5jZSB0byBhc3NvY2lhdGUgdGhlIHNvdXJjZSBvZiB0aGlzIGluZm9ybWF0aW9uIHRvIHRoZSBpZGVudGl0eSBkZWZpbmVkIGJ5IGlkZW50aXR5IGluZGV4LiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAiZm9ybWF0IjogImludDMyIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJpZC1yZWZlcmVuY2UiCiAgICAgIF0KICAgIH0sCiAgICAiQWRkcmVzc1R5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJhZGRyZXNzVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJDb21wbGV4VHlwZSBmb3IgYWRkcmVzcyBkZXRhaWxzXHJcblxuIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0N1cnJlbnRQcmV2aW91c1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImZpcnN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmlyc3QgcmVwb3J0ZWQgZGF0ZSBpbiB0aGUgQnVyZWF1LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgInByb3BlcnR5IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb3BlcnR5IE5hbWUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInVuaXQtbnVtYmVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXQgb3IgRmxhdCBOdW1iZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInN0cmVldC1udW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RyZWV0L0hvdXNlIE51bWJlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAic3RyZWV0LW5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RyZWV0IE5hbWUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInN0cmVldC10eXBlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0cmVldCBUeXBlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdWJ1cmIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3VidXJiIG9yIFRvd24iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInN0YXRlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BdXN0cmFsaWFuU3RhdGVUeXBlIgogICAgICAgIH0sCiAgICAgICAgInBvc3Rjb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBvc3Rjb2RlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJEUElEIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY291bnRyeS1jb2RlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db3VudHJ5Q29kZUVudW1UeXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJBZGRyZXNzSW5wdXR0eXBlIjogewogICAgICAidGl0bGUiOiAiYWRkcmVzcy1pbnB1dFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQ29tcGxleFR5cGUgZm9yIGFkZHJlc3MgZGV0YWlsc1xyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ0eXBlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DdXJyZW50UHJldmlvdXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgInRpbWUtYXQtYWRkcmVzcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInVuZm9ybWF0dGVkLWFkZHJlc3MiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQWRtaW5pc3RyYXRpb25JZHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJhZG1pbmlzdHJhdGlvbi1pZFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImRpc3RyaWN0IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBkaXN0cmljdCB0aGUgbWF0dGVyIHdhcyBjb21tZW5jZWQgaW4gKHByZXZpb3VzbHkgY2FsbGVkIHN0YXRlKS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInllYXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHllYXIgaW4gd2hpY2ggdGhlIGFwcGxpY2F0aW9uL2VzdGF0ZSBjb21tZW5jZWQuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJudW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBmcm9tIHRoZSBzb3VyY2Ugc3lzdGVtIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwcm9jZWVkaW5ncy1zdGF0dXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRWl0aGVyIFBhcnQgOSBvciBQYXJ0IDEwLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIkFzc29jaWF0aW9uSW5mb3JtYXRpb250eXBlIjogewogICAgICAidGl0bGUiOiAiYXNzb2NpYXRpb24taW5mb3JtYXRpb25UeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJpcy1kaXNwdXRlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibGF0ZXN0LXN0YXJ0LWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBhY2NvdW50IGhvbGRlciBjb21tZW5jZWQgaGlzIGxhc3QgaW52b2x2ZW1lbnQgd2l0aCBhY2NvdW50IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAibGF0ZXN0LWNlYXNlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgYWNjb3VudCBob2xkZXIgbGFzdCBjZWFzZWQgaW52b2x2ZW1lbnQgd2l0aCBhY2NvdW50IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtc2VyaW91cy1jcmVkaXQtaW5mcmluZ2VtZW50IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyB0aGF0IHRoZSBzdWJqZWN0IG9mIHRoZSBlbnF1aXJ5IGhhc1x0Y29tbWl0dGVkIGEgc2VyaW91cyBjcmVkaXQgaW5mcmluZ2VtZW50IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAic2NpLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBzZXJpb3VzIGNyZWRpdCBpbmZyaW5nZW1lbnQgd2FzIGRldGVybWluZWQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkZWZhdWx0LWFzc29jaWF0aW9uLXN0YXJ0LWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBhY2NvdW50IGhvbGRlciBzdGFydGVkIGFzc29jaWF0aW9uIHdpdGggdGhlIGRlZmF1bHQgc3RhdGUgb2YgdGhlIGFjY291bnQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkZWZhdWx0LWFzc29jaWF0aW9uLWNlYXNlLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBhY2NvdW50IGhvbGRlciBjZWFzZWQgYXNzb2NpYXRpb24gd2l0aCB0aGUgZGVmYXVsdCBzdGF0ZSBvZiB0aGUgYWNjb3VudCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImFkZGl0aW9uYWwtZGF0YS1maWVsZHMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FkZGl0aW9uYWxEYXRhRmllbGRzdHlwZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQnVzaW5lc3NSZWdpc3RyYXRpb250eXBlIjogewogICAgICAidGl0bGUiOiAiYnVzaW5lc3MtcmVnaXN0cmF0aW9uVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAic3RhdGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0F1c3RyYWxpYW5TdGF0ZVR5cGUiCiAgICAgICAgfSwKICAgICAgICAibnVtYmVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgYXNzaWduZWQgYnkgdGhlIHN0YXRlIGZvciByZWdpc3RyYXRpb24gb2YgdGhlIGJ1c2luZXNzIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQnVzaW5lc3MiOiB7CiAgICAgICJ0aXRsZSI6ICJidXNpbmVzcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiYnVyZWF1LXJlZmVyZW5jZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJWZWRhIGludGVybmFsIHVuaXF1ZSByZWZlcmVuY2UgZm9yIHRoaXMgb3JnYW5pc2F0aW9uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkJ1c2luZXNzIG5hbWUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInByZXZpb3VzLXN0YXRlLW9yLXRlcnJpdG9yeS1yZWdpc3RyYXRpb24iOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0J1c2luZXNzUmVnaXN0cmF0aW9udHlwZSIKICAgICAgICB9LAogICAgICAgICJBQk4iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJidXNpbmVzcy1uYW1lLWlkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seS4gSWRlbnRpZmllcyBhIGJ1c2luZXNzIG5hbWUsIHVzaW5nIGFuIGludGVybmFsIFZlZGEgaWRlbnRpZmllci4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJCdXNpbmVzc05hbWV0eXBlIjogewogICAgICAidGl0bGUiOiAiYnVzaW5lc3MtbmFtZVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImJ1c2luZXNzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9CdXNpbmVzcyIKICAgICAgICB9LAogICAgICAgICJsYXN0LWV4dHJhY3QtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIGRldGFpbHMgd2VyZSBsYXN0IHNvdXJjZWQgZnJvbSBhIGNvbXBhbnkgZXh0cmFjdCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtZXh0cmFjdC10aW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWUgZGV0YWlscyB3ZXJlIGxhc3Qgc291cmNlZCBmcm9tIGEgY29tcGFueVx0ZXh0cmFjdCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiCiAgICAgICAgfSwKICAgICAgICAibGFzdC11cGRhdGUtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIGRldGFpbHMgd2VyZSBsYXN0IHVwZGF0ZWQuIEFzIG9wcG9zZWQgdG8gYW4gZXh0cmFjdCwgYW4gdXBkYXRlIG1pZ2h0IG9ubHkgcmVmcmVzaCBhIHN1YnNldCBvZiB0aGUgZGF0YSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtdXBkYXRlLXRpbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZSBkZXRhaWxzIHdlcmUgbGFzdCB1cGRhdGVkIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICB9LAogICAgICAgICJpcy1kaXNwdXRlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiaWQtcmVmZXJlbmNlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvSWRSZWZlcmVuY2VzVHlwZSIKICAgICAgICB9LAogICAgICAgICJzdGFydC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgd2hlbiB0aGUgaW5kaXZpZHVhbCBiZWNhbWUgdGhlIG93bmVyIG9mIHRoZSBidXNpbmVzcyBuYW1lIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJidXNpbmVzcyIKICAgICAgXQogICAgfSwKICAgICJEYXRhTGV2ZWxUeXBlIjogewogICAgICAidGl0bGUiOiAiRGF0YUxldmVsVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgdGhlIGRhdGEgbGV2ZWwgdHlwZSBvZiB0aGUgc2NvcmVjYXJkLiBBIHNjb3JlY2FyZCBkZXZlbG9wZWQgZm9yIE5lZ2F0aXZlLCBQYXJ0aWFsIG9yIENvbXByZWhlbnNpdmUgZGF0YS5cclxuXG4iLAogICAgICAidHlwZSI6ICJvYmplY3QiCiAgICB9LAogICAgIkNoYXJhY3RlcmlzdGljVHlwZSI6IHsKICAgICAgInRpdGxlIjogImNoYXJhY3RlcmlzdGljVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ2hhcmFjdGVyaXN0aWMgaWQgd2hpY2ggdW5pcXVlbHkgaWRlbnRpZmllcyB0aGUgY2hhcmFjdGVyaXN0aWMuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJ2YXJpYWJsZS1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbWUgb2YgdmFyaWFibGUgYXNzb2NpYXRlZCB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpYyIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGVzY3JpcHRpb24gb2YgY2hhcmFjdGVyaXN0aWMiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInZhbHVlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9WYWx1ZSIKICAgICAgICB9LAogICAgICAgICJrZXktY2hhcmFjdGVyaXN0aWMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGNoYXJhY3RlcmlzdGljIHJldHVybmVkIGlzIGEga2V5IGNoYXJhY3RlcmlzdGljLiBLZXkgY2hhcmFjdGVyaXN0aWNzIGFyZSBmbGFnZ2VkIHNvIHRoYXQgdGhleSBjYW4gYmUgZWFzaWx5IGlkZW50aWZpZWQgdG8gcmVuZGVyIG9uIGEgc2NyZWVuIG9yIGEgcmVwb3J0LiIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRhdGEtbGV2ZWwiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RhdGFMZXZlbFR5cGUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImlkIiwKICAgICAgICAidmFyaWFibGUtbmFtZSIsCiAgICAgICAgImRlc2NyaXB0aW9uIiwKICAgICAgICAidmFsdWUiCiAgICAgIF0KICAgIH0sCiAgICAiRmlsZU5vdGV0eXBlIjogewogICAgICAidGl0bGUiOiAiZmlsZS1ub3RlVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibm90ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJmaWxlIG5vdGUgY29udGVudCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtcmVjb3JkZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSB0aGUgZmlsZSBub3RlIHdhcyByZWNjb3JkZWQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJub3RlIgogICAgICBdCiAgICB9LAogICAgIkZpbGVOb3RlcyI6IHsKICAgICAgInRpdGxlIjogImZpbGUtbm90ZXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImZpbGUtbm90ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGaWxlIG5vdGUiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0ZpbGVOb3RldHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZmlsZS1ub3RlIgogICAgICBdCiAgICB9LAogICAgIkFjY291bnRUeXBlIjogewogICAgICAidGl0bGUiOiAiYWNjb3VudC10eXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIKICAgIH0sCiAgICAiTW9uZXlUeXBlIjogewogICAgICAidGl0bGUiOiAiTW9uZXlUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkFuIGFtb3VudCBvZiBtb25leSBleHByZXNzZWQgaW4gd2hvbGUgZG9sbGFyc1xyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjdXJyZW5jeS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlNlY3VyZWRDcmVkaXQiOiB7CiAgICAgICJ0aXRsZSI6ICJzZWN1cmVkLWNyZWRpdCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiCiAgICB9LAogICAgIlJlbGF0aW9uc2hpcCI6IHsKICAgICAgInRpdGxlIjogInJlbGF0aW9uc2hpcCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUeXBlIG9mIHJlbGF0aW9uc2hpcCAoY29kZSkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJDcmVkaXRFbnF1aXJlciI6IHsKICAgICAgInRpdGxlIjogImNyZWRpdC1lbnF1aXJlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDcmVkaXQgZW5xdWlyZXIgbmFtZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY2xhc3NpZmljYXRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQ3JlZGl0RW5xdWlyeXR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJjcmVkaXQtZW5xdWlyeVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImFjY291bnQtdHlwZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWNjb3VudFR5cGUiCiAgICAgICAgfSwKICAgICAgICAic2VjdXJlZC1jcmVkaXQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1NlY3VyZWRDcmVkaXQiCiAgICAgICAgfSwKICAgICAgICAicmVsYXRpb25zaGlwIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9SZWxhdGlvbnNoaXAiCiAgICAgICAgfSwKICAgICAgICAiY3JlZGl0LWVucXVpcmVyIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DcmVkaXRFbnF1aXJlciIKICAgICAgICB9LAogICAgICAgICJ0eXBlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlR5cGUgb2YgZW5xdWlyeTogY3JlZGl0LWVucXVpcnkgKGNvbW1lcmNpYWwgb25seSksIGNyZWRpdC1yZXZpZXcgKGNvbW1lcmNpYWwgb25seSksIGNyZWRpdC1hcHBsaWNhdGlvbiAoY29uc3VtZXIgb25seSkgb3IgYXV0aG9yaXNlZC1hZ2VudC1lbnF1aXJ5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJlbnF1aXJ5LWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSB0aGUgY3JlZGl0IGVucXVpcnkgd2FzIHJlY29yZGVkIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImlkLXJlZmVyZW5jZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0lkUmVmZXJlbmNlc1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiZW5xdWlyeS1hbW91bnQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL01vbmV5VHlwZSIKICAgICAgICB9LAogICAgICAgICJpcy11bmxpbWl0ZWQtY3JlZGl0IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImNvLWJvcnJvd2VyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbWUgb2YgdGhlIGNvLWJvcnJvd2VyIGlmIHRoZSBzdWJqZWN0IHdhcyBwYXJ0IG9mIGFuIGFzc29jaWF0aW9uLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZW5xdWlyeS1jbGllbnQtcmVmZXJlbmNlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSByZWZlcmVuY2UgcHJvdmlkZWQgYnkgdGhlIGNyZWRpdCBlbnF1aXJlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJhY2NvdW50LXR5cGUiLAogICAgICAgICJzZWN1cmVkLWNyZWRpdCIsCiAgICAgICAgInJlbGF0aW9uc2hpcCIsCiAgICAgICAgImNyZWRpdC1lbnF1aXJlciIKICAgICAgXQogICAgfSwKICAgICJDcmVkaXRFbnF1aXJpZXMiOiB7CiAgICAgICJ0aXRsZSI6ICJjcmVkaXQtZW5xdWlyaWVzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjcmVkaXQtZW5xdWlyeSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmNsdWRlcyBkZXRhaWxzIG9mIG9uZSBlbnF1aXJ5IiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DcmVkaXRFbnF1aXJ5dHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY3JlZGl0LWVucXVpcnkiCiAgICAgIF0KICAgIH0sCiAgICAiQ3JlZGl0UHJvdmlkZXJ0eXBlIjogewogICAgICAidGl0bGUiOiAiY3JlZGl0LXByb3ZpZGVyVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDcmVkaXQgcHJvdmlkZXIgbmFtZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY2xhc3NpZmljYXRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpcy1saWNlbnNlZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgd2hldGhlciB0aGUgY3JlZGl0IHByb3ZpZGVyIGlzIGEgbGljZW5zZWUiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiVHJhbnNmZXJSZWFzb24iOiB7CiAgICAgICJ0aXRsZSI6ICJ0cmFuc2Zlci1yZWFzb24iLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVhc29uIGZvciB0cmFuc2ZlciBvZiBvd25lcnNoaXAgKGNvZGUpIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiTGF0ZXN0Q3JlZGl0UHJvdmlkZXIiOiB7CiAgICAgICJ0aXRsZSI6ICJsYXRlc3QtY3JlZGl0LXByb3ZpZGVyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJhbGxPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NyZWRpdFByb3ZpZGVydHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInRyYW5zZmVyLXJlYXNvbiI6IHsKICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1RyYW5zZmVyUmVhc29uIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHJhbnNmZXItZGF0ZSI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBBY2NvdW50IG93bmVyc2hpcCB3YXMgdHJhbnNmZXJyZWQuIFN0YXJ0IG9mIGVmZmVjdGl2ZSBvd25lcnNoaXAgb2YgYWNjb3VudCIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJ0cmFuc2Zlci1yZWFzb24iCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgIkxvYW5QYXltZW50TWV0aG9kIjogewogICAgICAidGl0bGUiOiAibG9hbi1wYXltZW50LW1ldGhvZCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiCiAgICB9LAogICAgIlRlcm1UeXBlIjogewogICAgICAidGl0bGUiOiAidGVybS10eXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIKICAgIH0sCiAgICAiTGF0ZXN0TWF4aW11bUFtb3VudENyZWRpdCI6IHsKICAgICAgInRpdGxlIjogImxhdGVzdC1tYXhpbXVtLWFtb3VudC1jcmVkaXQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTW9uZXlUeXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiZGF0ZS1sYXN0LWNoYW5nZWQiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiUGF5bWVudFR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJwYXltZW50VHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInBlcmlvZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJSZXBheW1lbnQgcGVyaW9kIHllYXIgYW5kIG1vbnRoIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJlcGF5bWVudCBoaXN0b3J5IHN0YXR1cyBvZiB0aGUgYWNjb3VudCBmb3IgdGhlIHNwZWNpZmllZCBtb250aGx5IHBlcmlvZCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYmFsYW5jZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTW9uZXlUeXBlIgogICAgICAgIH0sCiAgICAgICAgInV0aWxpc2F0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJSZXBheW1lbnRIaXN0b3J5IjogewogICAgICAidGl0bGUiOiAicmVwYXltZW50LWhpc3RvcnkiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInBheW1lbnQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5jbHVkZXMgcmVwYXltZW50IGhpc3RvcnkgaW5mb3JtYXRpb24gZm9yIG9uZSByZXBheW1lbnQgcGVyaW9kIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9QYXltZW50VHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicGF5bWVudCIKICAgICAgXQogICAgfSwKICAgICJTdGF0dXMiOiB7CiAgICAgICJ0aXRsZSI6ICJzdGF0dXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IgogICAgfSwKICAgICJSZWFzb25Ub1JlcG9ydCI6IHsKICAgICAgInRpdGxlIjogInJlYXNvbi10by1yZXBvcnQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ29kZSBhc3NvY2lhdGVkIHdpdGggdGhlIHJlYXNvbiB0byByZXBvcnQuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQ29tbWVyY2lhbERlZmF1bHRSZWNvcmR0eXBlIjogewogICAgICAidGl0bGUiOiAiY29tbWVyY2lhbC1kZWZhdWx0LXJlY29yZFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInJlYXNvbi10by1yZXBvcnQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1JlYXNvblRvUmVwb3J0IgogICAgICAgIH0sCiAgICAgICAgImRhdGUtcmVjb3JkZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSB0aGUgYWNjb3VudCB3YXMgcmVwb3J0ZWQgYXMgaW4gZGVmYXVsdC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkZWZhdWx0LWFtb3VudCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTW9uZXlUeXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJyZWFzb24tdG8tcmVwb3J0IgogICAgICBdCiAgICB9LAogICAgIkNvbW1lcmNpYWxEZWZhdWx0dHlwZSI6IHsKICAgICAgInRpdGxlIjogImNvbW1lcmNpYWwtZGVmYXVsdFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0YXR1cyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvU3RhdHVzIgogICAgICAgIH0sCiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIG9mIGxhc3Qgc3RhdHVzIHVwZGF0ZSBvbiBkZWZhdWx0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtYWNjZWxlcmF0ZWQtZGVidCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkuIElmIHByZXNlbnQsIGFuZCB0cnVlLCBpbmRpY2F0ZXMgdGhhdCB0aGUgYW1vdW50IG9mIHRoZSBvdmVyZHVlIHBheW1lbnQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgYWNjZWxlcmF0aW9uIG9mIHRoZSBlbnRpcmUgbGlhYmlsaXR5IGZvciB0aGUgY29uc3VtZXIgY3JlZGl0LiBUaGlzIGluZGljYXRvciBtYXkgYmUgcG9wdWxhdGVkIGZvciBkZWZhdWx0cyB1cGRhdGVkIHBvc3QgTWF5IDIwMTQuIE5vdGUgdGhhdCB0aGUgYWJzZW5jZSBvZiB0aGUgaW5kaWNhdG9yIG1lYW5zIHRoYXQgbm8gZGVidCBhY2NlbGVyYXRpb24gd2FzIHJlcG9ydGVkIHRvIFZlZGEsIG5vdCBuZWNlc3NhcmlseSB0aGF0IHRoZSBkZWJ0IHdhcyBub3QgYWNjZWxlcmF0ZWQiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJvcmlnaW5hbC1kZWZhdWx0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db21tZXJjaWFsRGVmYXVsdFJlY29yZHR5cGUiCiAgICAgICAgfSwKICAgICAgICAiY3VycmVudC1kZWZhdWx0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db21tZXJjaWFsRGVmYXVsdFJlY29yZHR5cGUiCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJzdGF0dXMiCiAgICAgIF0KICAgIH0sCiAgICAiRGVmYXVsdHMiOiB7CiAgICAgICJ0aXRsZSI6ICJkZWZhdWx0cyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NvbW1lcmNpYWxEZWZhdWx0dHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZGVmYXVsdCIKICAgICAgXQogICAgfSwKICAgICJQcmlvclZhbHVlIjogewogICAgICAidGl0bGUiOiAicHJpb3ItdmFsdWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiY29kZSBjb3JyZXNwb25kaW5nIHRvIHRoZSB2YWx1ZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlVwZGF0ZWRWYWx1ZSI6IHsKICAgICAgInRpdGxlIjogInVwZGF0ZWQtdmFsdWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiY29kZSBjb3JyZXNwb25kaW5nIHRvIHRoZSB2YWx1ZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlByb3BlcnR5IjogewogICAgICAidGl0bGUiOiAicHJvcGVydHkiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInByaW9yLXZhbHVlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9QcmlvclZhbHVlIgogICAgICAgIH0sCiAgICAgICAgInVwZGF0ZWQtdmFsdWUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1VwZGF0ZWRWYWx1ZSIKICAgICAgICB9LAogICAgICAgICJ1bml0IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJOYW1lIG9mIHRoZSBhY2NvdW50IHByb3BlcnR5IG1vZGlmaWVkIGFzIHBhcnQgb2YgdGhlIGV2ZW50IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicHJpb3ItdmFsdWUiLAogICAgICAgICJ1cGRhdGVkLXZhbHVlIgogICAgICBdCiAgICB9LAogICAgIkV2ZW50RGV0YWlscyI6IHsKICAgICAgInRpdGxlIjogImV2ZW50LWRldGFpbHMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInByb3BlcnR5IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Qcm9wZXJ0eSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicHJvcGVydHkiCiAgICAgIF0KICAgIH0sCiAgICAiRXZlbnRUeXBlIjogewogICAgICAidGl0bGUiOiAiZXZlbnRUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJldmVudC1kZXRhaWxzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FdmVudERldGFpbHMiCiAgICAgICAgfSwKICAgICAgICAiZXZlbnQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJpcy1kaXNwdXRlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZXZlbnQtZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZXZlbnQtZGV0YWlscyIKICAgICAgXQogICAgfSwKICAgICJBY2NvdW50SGlzdG9yeSI6IHsKICAgICAgInRpdGxlIjogImFjY291bnQtaGlzdG9yeSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXZlbnQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FdmVudFR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImV2ZW50IgogICAgICBdCiAgICB9LAogICAgIkNvbW1lcmNpYWxDcmVkaXRBY2NvdW50dHlwZSI6IHsKICAgICAgInRpdGxlIjogImNvbW1lcmNpYWwtY3JlZGl0LWFjY291bnRUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJsYXRlc3QtY3JlZGl0LXByb3ZpZGVyIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9MYXRlc3RDcmVkaXRQcm92aWRlciIKICAgICAgICB9LAogICAgICAgICJsb2FuLXBheW1lbnQtbWV0aG9kIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Mb2FuUGF5bWVudE1ldGhvZCIKICAgICAgICB9LAogICAgICAgICJ0ZXJtLXR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Rlcm1UeXBlIgogICAgICAgIH0sCiAgICAgICAgImxhdGVzdC1tYXhpbXVtLWFtb3VudC1jcmVkaXQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0xhdGVzdE1heGltdW1BbW91bnRDcmVkaXQiCiAgICAgICAgfSwKICAgICAgICAicmVwYXltZW50LWhpc3RvcnkiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1JlcGF5bWVudEhpc3RvcnkiCiAgICAgICAgfSwKICAgICAgICAiZGVmYXVsdHMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RlZmF1bHRzIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtaGlzdG9yeSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWNjb3VudEhpc3RvcnkiCiAgICAgICAgfSwKICAgICAgICAibGF0ZXN0LXVwZGF0ZS1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgdGhlIGFjY291bnQgd2FzIGxhc3QgdXBkYXRlZCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQWNjb3VudCBpZGVudGlmaWVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvcmlnaW5hbC1jcmVkaXQtcHJvdmlkZXIiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NyZWRpdFByb3ZpZGVydHlwZSIKICAgICAgICB9LAogICAgICAgICJhY2NvdW50LXR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FjY291bnRUeXBlIgogICAgICAgIH0sCiAgICAgICAgInJlbGF0aW9uc2hpcCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVsYXRpb25zaGlwIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtaG9sZGVyLWNvdW50IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgYWNjb3VudCBob2xkZXJzIHJlY29yZGVkIGZvciB0aGUgYWNjb3VudC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IjogImludDMyIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtb3Blbi1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRheSBvbiB3aGljaCBjcmVkaXQgcHJvdmlkZXIgZGVlbXMgYWNjb3VudCB0byBiZSBvcGVuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudC1jbG9zZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIGNyZWRpdCBpcyB0ZXJtaW5hdGVkIG9yIG90aGVyd2lzZSBjZWFzZXMgdG8gYmUgaW4gZm9yY2Ugd2hlbiB0aGUgY3JlZGl0IGlzIG5vIGxvbmdlciBhdmFpbGFibGUgdG8gdGhlIGluZGl2aWR1YWwiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJhY2NvdW50LXJlb3Blbi1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seS4gRGF0ZSBhY2NvdW50IHdhcyByZS1vcGVuZWQgKGlmIGFwcGxpY2FibGUpIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAic2VjdXJlZC1jcmVkaXQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1NlY3VyZWRDcmVkaXQiCiAgICAgICAgfSwKICAgICAgICAidGVybS1vZi1sb2FuIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHBlcmlvZCBvZiB0aGUgb3JpZ2luYWwgY29udHJhY3RlZCB0ZXJtIG9mIHRoZSBsb2FuIGluIG1vbnRocyIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAib3JpZ2luYWwtbWF4aW11bS1hbW91bnQtY3JlZGl0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Nb25leVR5cGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtdW5saW1pdGVkLWNyZWRpdCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgd2hldGhlciBjcmVkaXQgYW1vdW50IGF2YWlsYWJsZSBpcyB1bmxpbWl0ZWQiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJhZGRpdGlvbmFsLWRhdGEtZmllbGRzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRpdGlvbmFsRGF0YUZpZWxkc3R5cGUiCiAgICAgICAgfSwKICAgICAgICAiYXNzb2NpYXRpb24taW5mb3JtYXRpb24iOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0Fzc29jaWF0aW9uSW5mb3JtYXRpb250eXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJsYXRlc3QtY3JlZGl0LXByb3ZpZGVyIiwKICAgICAgICAibG9hbi1wYXltZW50LW1ldGhvZCIsCiAgICAgICAgInRlcm0tdHlwZSIsCiAgICAgICAgImxhdGVzdC1tYXhpbXVtLWFtb3VudC1jcmVkaXQiLAogICAgICAgICJyZXBheW1lbnQtaGlzdG9yeSIsCiAgICAgICAgImRlZmF1bHRzIiwKICAgICAgICAiYWNjb3VudC1oaXN0b3J5IgogICAgICBdCiAgICB9LAogICAgIkFjY291bnRzIjogewogICAgICAidGl0bGUiOiAiYWNjb3VudHMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImFjY291bnQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgYW4gaW5zdGFuY2Ugb2YgdGhlIGluZGl2aWR1YWwncyBhY2NvdW50cyIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ29tbWVyY2lhbENyZWRpdEFjY291bnR0eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJhY2NvdW50IgogICAgICBdCiAgICB9LAogICAgIk1lc3NhZ2UiOiB7CiAgICAgICJ0aXRsZSI6ICJtZXNzYWdlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkNvZGUgYXNzb2NpYXRlZCB3aXRoIHRoZSBtZXNzYWdlLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIk1lc3NhZ2VzVHlwZSI6IHsKICAgICAgInRpdGxlIjogIm1lc3NhZ2VzVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTWVzc2FnZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibWVzc2FnZSIKICAgICAgXQogICAgfSwKICAgICJDb21tZXJjaWFsQ3JlZGl0RmlsZXR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJjb21tZXJjaWFsLWNyZWRpdC1maWxlVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZmlsZS1ub3RlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRmlsZU5vdGVzIgogICAgICAgIH0sCiAgICAgICAgImNyZWRpdC1lbnF1aXJpZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NyZWRpdEVucXVpcmllcyIKICAgICAgICB9LAogICAgICAgICJhY2NvdW50cyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWNjb3VudHMiCiAgICAgICAgfSwKICAgICAgICAibWVzc2FnZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL01lc3NhZ2VzVHlwZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZmlsZS1ub3RlcyIsCiAgICAgICAgImNyZWRpdC1lbnF1aXJpZXMiLAogICAgICAgICJhY2NvdW50cyIKICAgICAgXQogICAgfSwKICAgICJNZXNzYWdlc1R5cGU1MSI6IHsKICAgICAgInRpdGxlIjogIm1lc3NhZ2VzVHlwZTUxIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJtZXNzYWdlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb2R1Y3QgbWVzc2FnZSAocmVuYW1lZCwgd2FzIGZpbGUtbWVzc2FnZSBpbiBWZWRhU2NvcmUgMS4xKSIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTWVzc2FnZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibWVzc2FnZSIKICAgICAgXQogICAgfSwKICAgICJDb25zdW1lckNyZWRpdEZpbGV0eXBlIjogewogICAgICAidGl0bGUiOiAiY29uc3VtZXItY3JlZGl0LWZpbGVUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJmaWxlLW5vdGVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9GaWxlTm90ZXMiCiAgICAgICAgfSwKICAgICAgICAiY3JlZGl0LWVucXVpcmllcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ3JlZGl0RW5xdWlyaWVzIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnRzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BY2NvdW50cyIKICAgICAgICB9LAogICAgICAgICJtZXNzYWdlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTWVzc2FnZXNUeXBlNTEiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlNjb3JlSW1wYWN0b3IiOiB7CiAgICAgICJ0aXRsZSI6ICJzY29yZS1pbXBhY3RvciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJDb250cmlidXRpbmdGYWN0b3J0eXBlIjogewogICAgICAidGl0bGUiOiAiY29udHJpYnV0aW5nLWZhY3RvclR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFtZSBvZiB0aGUgY29udHJpYnV0aW5nIGZhY3Rvci4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInNjb3JlLWltcGFjdG9yIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9TY29yZUltcGFjdG9yIgogICAgICAgIH0sCiAgICAgICAgImlkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkNvbnRyaWJ1dGluZyBmYWN0b3IgaWQgd2hpY2ggdW5pcXVlbHkgaWRlbnRpZmllcyB0aGUgY29udHJpYnV0aW5nIGZhY3Rvci4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRlc2NyaXB0aW9uIG9mIHRoZSBjb250cmlidXRpbmcgZmFjdG9yLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm5hbWUiLAogICAgICAgICJzY29yZS1pbXBhY3RvciIKICAgICAgXQogICAgfSwKICAgICJDb25zdW1lckNyZWRpdEFjY291bnR0eXBlIjogewogICAgICAidGl0bGUiOiAiY29uc3VtZXItY3JlZGl0LWFjY291bnRUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJsYXRlc3QtdXBkYXRlLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSB0aGUgYWNjb3VudCB3YXMgbGFzdCB1cGRhdGVkIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImlkLXJlZmVyZW5jZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0lkUmVmZXJlbmNlc1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudC1pZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBY2NvdW50IGlkZW50aWZpZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm9yaWdpbmFsLWNyZWRpdC1wcm92aWRlciI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ3JlZGl0UHJvdmlkZXJ0eXBlIgogICAgICAgIH0sCiAgICAgICAgImxhdGVzdC1jcmVkaXQtcHJvdmlkZXIiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0xhdGVzdENyZWRpdFByb3ZpZGVyIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtdHlwZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWNjb3VudFR5cGUiCiAgICAgICAgfSwKICAgICAgICAicmVsYXRpb25zaGlwIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9SZWxhdGlvbnNoaXAiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudC1ob2xkZXItY291bnQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBhY2NvdW50IGhvbGRlcnMgcmVjb3JkZWQgZm9yIHRoZSBhY2NvdW50LiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiOiAiaW50MzIiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudC1vcGVuLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF5IG9uIHdoaWNoIGNyZWRpdCBwcm92aWRlciBkZWVtcyBhY2NvdW50IHRvIGJlIG9wZW4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJhY2NvdW50LWNsb3NlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgY3JlZGl0IGlzIHRlcm1pbmF0ZWQgb3Igb3RoZXJ3aXNlIGNlYXNlcyB0byBiZSBpbiBmb3JjZSB3aGVuIHRoZSBjcmVkaXQgaXMgbm8gbG9uZ2VyIGF2YWlsYWJsZSB0byB0aGUgaW5kaXZpZHVhbCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtcmVvcGVuLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBhY2NvdW50IHdhcyByZS1vcGVuZWQgKGlmIGFwcGxpY2FibGUpIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAibG9hbi1wYXltZW50LW1ldGhvZCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTG9hblBheW1lbnRNZXRob2QiCiAgICAgICAgfSwKICAgICAgICAidGVybS10eXBlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9UZXJtVHlwZSIKICAgICAgICB9LAogICAgICAgICJzZWN1cmVkLWNyZWRpdCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvU2VjdXJlZENyZWRpdCIKICAgICAgICB9LAogICAgICAgICJ0ZXJtLW9mLWxvYW4iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgcGVyaW9kIG9mIHRoZSBvcmlnaW5hbCBjb250cmFjdGVkIHRlcm0gb2YgdGhlIGxvYW4gaW4gbW9udGhzIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvcmlnaW5hbC1tYXhpbXVtLWFtb3VudC1jcmVkaXQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL01vbmV5VHlwZSIKICAgICAgICB9LAogICAgICAgICJsYXRlc3QtbWF4aW11bS1hbW91bnQtY3JlZGl0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9MYXRlc3RNYXhpbXVtQW1vdW50Q3JlZGl0IgogICAgICAgIH0sCiAgICAgICAgImlzLXVubGltaXRlZC1jcmVkaXQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIHdoZXRoZXIgY3JlZGl0IGFtb3VudCBhdmFpbGFibGUgaXMgdW5saW1pdGVkIiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0sCiAgICAgICAgImFzc29jaWF0aW9uLWluZm9ybWF0aW9uIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Bc3NvY2lhdGlvbkluZm9ybWF0aW9udHlwZSIKICAgICAgICB9LAogICAgICAgICJyZXBheW1lbnQtaGlzdG9yeSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVwYXltZW50SGlzdG9yeSIKICAgICAgICB9LAogICAgICAgICJkZWZhdWx0cyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRGVmYXVsdHMiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudC1oaXN0b3J5IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BY2NvdW50SGlzdG9yeSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQ291cnRBY3Rpb25TdGF0dXMiOiB7CiAgICAgICJ0aXRsZSI6ICJjb3VydC1hY3Rpb24tc3RhdHVzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0YXR1cyBkYXRlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdGF0dXMgY29kZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIkNvdXJ0QWN0aW9udHlwZSI6IHsKICAgICAgInRpdGxlIjogImNvdXJ0LWFjdGlvblR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvdXJ0LWFjdGlvbi1zdGF0dXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NvdXJ0QWN0aW9uU3RhdHVzIgogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgY291cnQgYWN0aW9uOiBkZWZhdWx0LWp1ZGdlbWVudCBvciBvdGhlci1jb3VydC1hY3Rpb24gKHN1Y2ggYXMgd3JpdHMgYW5kIHN1bW1vbnMpLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImlkLXJlZmVyZW5jZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0lkUmVmZXJlbmNlc1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiYWN0aW9uLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGRhdGUgd2hlbiBhIGNvdXJ0IGp1ZGdlbWVudCB3YXMgc2lnbmVkIG9yIGEgd3JpdCwgc3VtbW9ucyBvciBjbGFpbSB3YXMgaXNzdWVkIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiY3JlZGl0b3IiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFtZSBvZiB0aGUgY3JlZGl0b3IiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImNvdXJ0LWFjdGlvbi1hbW91bnQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL01vbmV5VHlwZSIKICAgICAgICB9LAogICAgICAgICJwbGFpbnQtbnVtYmVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIklkZW50aWZpY2F0aW9uIG9mIHRoZSBhY3Rpb24gYXMgc3VwcGxpZWQgYnkgdGhlIGNvdXJ0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJjb3VydC10eXBlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlR5cGUgb2YgY291cnQgaW4gd2hpY2ggdGhlIGFjdGlvbiB0b29rIHBsYWNlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJyZWxhdGlvbnNoaXAiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1JlbGF0aW9uc2hpcCIKICAgICAgICB9LAogICAgICAgICJjby1ib3Jyb3dlciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJOYW1lIG9mIHRoZSBjby1ib3Jyb3dlciBpZiB0aGUgc3ViamVjdCB3YXMgcGFydCBvZiBhbiBhc3NvY2lhdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJjb3VydC1hY3Rpb24tc3RhdHVzIgogICAgICBdCiAgICB9LAogICAgIkRhdGFCbG9ja3R5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJkYXRhLWJsb2NrVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGxpc3Qgb2YgY2hhcmFjdGVyaXN0aWNzIGlzIHRoZSBzdGFuZGFyZCBHZW5lc2lzIHNldCBvciBhIGN1c3RvbSBzZXQgbGlzdC4gQ3VzdG9tIGNoYXJhY3RlcmlzdGljIGxpc3RzIGFyZSBhIGZ1dHVyZSBwcm9kdWN0IGZlYXR1cmUgYW5kIHdpbGwgYmUgY29uZmlndXJhdGlvbiBkcml2ZW4uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJjaGFyYWN0ZXJpc3RpYyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCBhIGNoYXJhY3RlcmlzdGljIGRhdGEgaXRlbS4iLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NoYXJhY3RlcmlzdGljVHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAidHlwZSIsCiAgICAgICAgImNoYXJhY3RlcmlzdGljIgogICAgICBdCiAgICB9LAogICAgIkNvbnN1bWVyRGVmYXVsdFJlY29yZHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJjb25zdW1lci1kZWZhdWx0LXJlY29yZFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImRhdGUtcmVjb3JkZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSB0aGUgYWNjb3VudCB3YXMgcmVwb3J0ZWQgYXMgaW4gZGVmYXVsdC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkZWZhdWx0LWFtb3VudCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTW9uZXlUeXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJDb25zdW1lckRlZmF1bHR0eXBlIjogewogICAgICAidGl0bGUiOiAiY29uc3VtZXItZGVmYXVsdFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1N0YXR1cyIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIG9mIGxhc3Qgc3RhdHVzIHVwZGF0ZSBvbiBkZWZhdWx0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtYWNjZWxlcmF0ZWQtZGVidCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkuIElmIHByZXNlbnQsIGFuZCB0cnVlLCBpbmRpY2F0ZXMgdGhhdCB0aGUgYW1vdW50IG9mIHRoZSBvdmVyZHVlIHBheW1lbnQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgYWNjZWxlcmF0aW9uIG9mIHRoZSBlbnRpcmUgbGlhYmlsaXR5IGZvciB0aGUgY29uc3VtZXIgY3JlZGl0LiBUaGlzIGluZGljYXRvciBtYXkgYmUgcG9wdWxhdGVkIGZvciBkZWZhdWx0cyB1cGRhdGVkIHBvc3QgTWF5IDIwMTQuIE5vdGUgdGhhdCB0aGUgYWJzZW5jZSBvZiB0aGUgaW5kaWNhdG9yIG1lYW5zIHRoYXQgbm8gZGVidCBhY2NlbGVyYXRpb24gd2FzIHJlcG9ydGVkIHRvIFZlZGEsIG5vdCBuZWNlc3NhcmlseSB0aGF0IHRoZSBkZWJ0IHdhcyBub3QgYWNjZWxlcmF0ZWQiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJvcmlnaW5hbC1kZWZhdWx0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db25zdW1lckRlZmF1bHRSZWNvcmR0eXBlIgogICAgICAgIH0sCiAgICAgICAgImN1cnJlbnQtZGVmYXVsdCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ29uc3VtZXJEZWZhdWx0UmVjb3JkdHlwZSIKICAgICAgICB9LAogICAgICAgICJhZGRpdGlvbmFsLWRhdGEtZmllbGRzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRpdGlvbmFsRGF0YUZpZWxkc3R5cGUiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJ0eXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIKICAgIH0sCiAgICAiT3JnYW5pc2F0aW9uVHlwZSI6IHsKICAgICAgInRpdGxlIjogIm9yZ2FuaXNhdGlvblR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiYnVyZWF1LXJlZmVyZW5jZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbnRlcm5hbCB1bmlxdWUgcmVmZXJlbmNlIGZvciB0aGlzIG9yZ2FuaXNhdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJOYW1lIG9mIHRoZSBvcmdhbmlzYXRpb24iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUtc3RhcnQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIHRoZSBuYW1lIHdhcyByZWdpc3RlcmVkIG9yIHJlc2VydmVkIHdpdGggQVNJQyIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgInN0YXR1cyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvU3RhdHVzIgogICAgICAgIH0sCiAgICAgICAgIm9yZ2FuaXNhdGlvbi1udW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG9yZ2FuaXNhdGlvbiBudW1iZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIkFCTiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgb3JnYW5pc2F0aW9uJ3MgQXVzdHJhbGlhbiBCdXNpbmVzcyBOdW1iZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJ0eXBlIgogICAgICBdCiAgICB9LAogICAgIkRpcmVjdG9yc2hpcFR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJkaXJlY3RvcnNoaXBUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ0eXBlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DdXJyZW50UHJldmlvdXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtZXh0cmFjdC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgZGV0YWlscyB3ZXJlIGxhc3Qgc291cmNlZCBmcm9tIGEgY29tcGFueSBleHRyYWN0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAibGFzdC1leHRyYWN0LXRpbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZSBkZXRhaWxzIHdlcmUgbGFzdCBzb3VyY2VkIGZyb20gYSBjb21wYW55XHRleHRyYWN0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICB9LAogICAgICAgICJsYXN0LXVwZGF0ZS1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgZGV0YWlscyB3ZXJlIGxhc3QgdXBkYXRlZC4gQXMgb3Bwb3NlZCB0byBhbiBleHRyYWN0LCBhbiB1cGRhdGUgbWlnaHQgb25seSByZWZyZXNoIGEgc3Vic2V0IG9mIHRoZSBkYXRhIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAibGFzdC11cGRhdGUtdGltZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lIGRldGFpbHMgd2VyZSBsYXN0IHVwZGF0ZWQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgIH0sCiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtYXBwb2ludGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGUgd2hlbiB0aGUgc3ViamVjdCB3YXMgYXBwb2ludGVkIGRpcmVjdG9yIG9mIHRoZSBvcmdhbmlzYXRpb24iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkYXRlLWNlYXNlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIHdoZW4gdGhlIHN1YmplY3QgY2Vhc2VkIHRvIGJlIGEgZGlyZWN0b3Igb2YgdGhlIG9yZ2FuaXNhdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtbGFzdC1rbm93bi1hcy1kaXJlY3RvciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIHdoZW4gdGhlIHN1YmplY3Qgd2FzIGxhc3QgcmVjb3JkZWQgYXMgYSBkaXJlY3RvciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgIm9yZ2FuaXNhdGlvbiI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvT3JnYW5pc2F0aW9uVHlwZSIKICAgICAgICB9LAogICAgICAgICJhZGRpdGlvbmFsLWRhdGEtZmllbGRzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRpdGlvbmFsRGF0YUZpZWxkc3R5cGUiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIkRpc3F1YWxpZmllZERpcmVjdG9yc2hpcHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJkaXNxdWFsaWZpZWQtZGlyZWN0b3JzaGlwVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibGFzdC1leHRyYWN0LWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBkZXRhaWxzIHdlcmUgbGFzdCBzb3VyY2VkIGZyb20gYSBjb21wYW55IGV4dHJhY3QiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJsYXN0LWV4dHJhY3QtdGltZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lIGRldGFpbHMgd2VyZSBsYXN0IHNvdXJjZWQgZnJvbSBhIGNvbXBhbnlcdGV4dHJhY3QiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtdXBkYXRlLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBkZXRhaWxzIHdlcmUgbGFzdCB1cGRhdGVkLiBBcyBvcHBvc2VkIHRvIGFuIGV4dHJhY3QsIGFuIHVwZGF0ZSBtaWdodCBvbmx5IHJlZnJlc2ggYSBzdWJzZXQgb2YgdGhlIGRhdGEiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJsYXN0LXVwZGF0ZS10aW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWUgZGV0YWlscyB3ZXJlIGxhc3QgdXBkYXRlZCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImlkLXJlZmVyZW5jZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0lkUmVmZXJlbmNlc1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiZGF0ZS1kaXNxdWFsaWZpZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBvZiBkaXNxdWFsaWZpY2F0aW9uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiZGF0ZS1kaXNxdWFsaWZpZWQtdW50aWwiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGF0ZSBkaXNxdWFsaWZpY2F0aW9uIHdpbGwgYmUgbGlmdGVkIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJFbXBsb3llclR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJlbXBsb3llclR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0N1cnJlbnRQcmV2aW91c1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImZpcnN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmlyc3QgcmVwb3J0ZWQgZGF0ZSBpbiB0aGUgQnVyZWF1LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFtZSBvZiBFbXBsb3llciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY291bnRyeS1jb2RlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db3VudHJ5Q29kZUVudW1UeXBlIgogICAgICAgIH0sCiAgICAgICAgIkFCTiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm9yZ2FuaXNhdGlvbi1udW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvY2N1cGF0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZyZWUtZm9ybSBvY2N1cGF0aW9uIGRlc2NyaXB0aW9uLiBBcHBsaWNhYmxlIG9ubHlcdGlmIHRoZSBjcmVkaXQgcHVycG9zZSBpcyBmb3IgQ29tbWVyY2lhbCBDcmVkaXQuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpcy1zZWxmLWVtcGxveWVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJFbXBsb3llcklucHV0dHlwZSI6IHsKICAgICAgInRpdGxlIjogImVtcGxveWVyLWlucHV0VHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ3VycmVudFByZXZpb3VzVHlwZSIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbWUgb2YgRW1wbG95ZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImNvdW50cnktY29kZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ291bnRyeUNvZGVFbnVtVHlwZSIKICAgICAgICB9LAogICAgICAgICJBQk4iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvcmdhbmlzYXRpb24tbnVtYmVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAib2NjdXBhdGlvbiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGcmVlLWZvcm0gb2NjdXBhdGlvbiBkZXNjcmlwdGlvbi4gQXBwbGljYWJsZSBvbmx5IGlmIHRoZSBjcmVkaXQgcHVycG9zZSBpcyBmb3IgQ29tbWVyY2lhbCBDcmVkaXQuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpcy1zZWxmLWVtcGxveWVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJ0eXBlIiwKICAgICAgICAibmFtZSIKICAgICAgXQogICAgfSwKICAgICJPdGhlckVucXVpcnlBdHRyaWJ1dGVzIjogewogICAgICAidGl0bGUiOiAib3RoZXItZW5xdWlyeS1hdHRyaWJ1dGVzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlbnF1aXJ5LWF0dHJpYnV0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0tleVZhbHVlUGFpcnR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVucXVpcnktYXR0cmlidXRlIgogICAgICBdCiAgICB9LAogICAgIkVucXVpcnlUeXBlIjogewogICAgICAidGl0bGUiOiAiZW5xdWlyeVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm90aGVyLWVucXVpcnktYXR0cmlidXRlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvT3RoZXJFbnF1aXJ5QXR0cmlidXRlcyIKICAgICAgICB9LAogICAgICAgICJwZXJtaXR0ZWQtZGlzY2xvc3VyZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImFjY291bnQtdHlwZS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlR5cGUgb2YgY3JlZGl0IGFjY291bnQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImVucXVpcnktYW1vdW50IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Nb25leVR5cGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtY3JlZGl0LXJldmlldyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgdGhlIGVucXVpcnkgdHlwZSBpZiBDb21tZXJjaWFsIENvbnN1bWVyLiBEb2VzIG5vdCBhcHBseSB0byBDb25zdW1lciBvciBDb25zdW1lcitDb21tZXJjaWFsIGVucXVpcmllcy4iLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJpcy11bmxpbWl0ZWQtY3JlZGl0IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgInNlY3VyZWQtY3JlZGl0LWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJyZWxhdGlvbnNoaXAtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXNjcmliZXMgdGhlIGluZGl2aWR1YWwncyBhc3NvY2lhdGlvbiB3aXRoIHRoZSBlbnF1aXJ5LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY28tYm9ycm93ZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFtZSBvZiBjby1ib3Jyb3dlciBpZiB0aGUgaW5kaXZpZHVhbCBpcyBub3QgYSBzaW5nbGUgYm9ycm93ZXIgKGluIGZyZWUtZm9ybSB0ZXh0KS4gQXBwbGljYWJsZSBvbmx5IGlmIHRoZSBjcmVkaXQgcHVycG9zZSBpcyBDb21tZXJjaWFsIENyZWRpdC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImVucXVpcnktY2xpZW50LXJlZmVyZW5jZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDbGllbnQgZW5xdWlyeSByZWZlcmVuY2UgYXNzb2NpYXRlZCB0byB0aGlzIGNyZWRpdCBlbnF1aXJ5IGFwcGxpY2F0aW9uIHN1Y2ggYXMgYSBjbGllbnQgbnVtYmVyIG9yIGFjY291bnQgbnVtYmVyLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm90aGVyLWVucXVpcnktYXR0cmlidXRlcyIKICAgICAgXQogICAgfSwKICAgICJJbmRpdmlkdWFsTmFtZXR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJpbmRpdmlkdWFsLW5hbWVUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkNvbXBsZXhUeXBlIGZvciB0aGUgZWxlbWVudHMgb2YgYW4gaW5kaXZpZHVhbCdzIGZ1bGwgbmFtZVxyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJmYW1pbHktbmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImZpcnN0LWdpdmVuLW5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvdGhlci1naXZlbi1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJ0aXRsZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJmYW1pbHktbmFtZSIsCiAgICAgICAgImZpcnN0LWdpdmVuLW5hbWUiLAogICAgICAgICJvdGhlci1naXZlbi1uYW1lIgogICAgICBdCiAgICB9LAogICAgIkluZGl2aWR1YWxOYW1lIjogewogICAgICAidGl0bGUiOiAiaW5kaXZpZHVhbC1uYW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJhbGxPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0luZGl2aWR1YWxOYW1ldHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImZpcnN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZpcnN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibGFzdC1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibGFzdC1jcmVkaXQtZW5xdWlyeS1kYXRlIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IGNyZWRpdCBlbnF1aXJ5IGRhdGUgc3VibWl0dGVkIGFnYWluc3QgdGhpcyBpZGVudGl0eS4gRGVwZW5kaW5nIG9uIHRoZSBjcmVkaXQgcHVycG9zZSBpdCB3aWxsIHJldHVybiB0aGUgZGF0ZSBvZiB0aGUgbGFzdCBjb25zdW1lciBjcmVkaXQgZW5xdWlyeSBvciB0aGUgbGFzdCBjb21tZXJjaWFsIGNyZWRpdCBlbnF1aXJ5LiIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiR2VuZGVyIjogewogICAgICAidGl0bGUiOiAiZ2VuZGVyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjb2RlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9HZW5kZXJDb2RldHlwZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiRGF0ZU9mQmlydGgiOiB7CiAgICAgICJ0aXRsZSI6ICJkYXRlLW9mLWJpcnRoIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJmaXJzdC1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZpcnN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJsYXN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTGFzdCByZXBvcnRlZCBkYXRlIGluIHRoZSBCdXJlYXUuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlBob3RvaWRDYXJkdHlwZSI6IHsKICAgICAgInRpdGxlIjogInBob3RvaWQtY2FyZFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQ29tcGxleFR5cGUgZm9yIHBob3RvaWQgY2FyZCBkZXRhaWxzXHJcblxuIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm51bWJlciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEcml2ZXJzIExpY2VuY2UgbnVtYmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJjb3VudHJ5LWNvZGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NvdW50cnlDb2RlRW51bVR5cGUiCiAgICAgICAgfSwKICAgICAgICAic3RhdGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0F1c3RyYWxpYW5TdGF0ZVR5cGUiCiAgICAgICAgfSwKICAgICAgICAiZGF0ZS1vZi1leHBpcnkiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiY2FyZC1udW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibnVtYmVyIgogICAgICBdCiAgICB9LAogICAgIkRyaXZlcnNMaWNlbmNlIjogewogICAgICAidGl0bGUiOiAiZHJpdmVycy1saWNlbmNlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJhbGxPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Bob3RvaWRDYXJkdHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImZpcnN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZpcnN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibGFzdC1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgIkxvZGdlZENvbXBsYWludCI6IHsKICAgICAgInRpdGxlIjogImxvZGdlZC1jb21wbGFpbnQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVwb3J0ZWQgZGF0ZSBvZiB0aGUgY29tcGxhaW50IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIklzRGVjZWFzZWQiOiB7CiAgICAgICJ0aXRsZSI6ICJpcy1kZWNlYXNlZCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJSZXBvcnRlZCBkYXRlIG9mIHRoZSBkZWNlYXNlZCBzdGF0dXMiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiRG9Ob3RQcm92aWRlQ3JlZGl0IjogewogICAgICAidGl0bGUiOiAiZG8tbm90LXByb3ZpZGUtY3JlZGl0IiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJyZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJJbmRpY2F0b3IiOiB7CiAgICAgICJ0aXRsZSI6ICJpbmRpY2F0b3IiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS2V5VmFsdWVQYWlydHlwZSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlJlcG9ydGVkIGRhdGUgb2YgdGhlIGluZGljYXRvci4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgIk90aGVySW5kaWNhdG9ycyI6IHsKICAgICAgInRpdGxlIjogIm90aGVyLWluZGljYXRvcnMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImluZGljYXRvciI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvSW5kaWNhdG9yIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJpbmRpY2F0b3IiCiAgICAgIF0KICAgIH0sCiAgICAiSWRlbnRpdHlUeXBlIjogewogICAgICAidGl0bGUiOiAiaWRlbnRpdHlUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJpbmRpdmlkdWFsLW5hbWUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0luZGl2aWR1YWxOYW1lIgogICAgICAgIH0sCiAgICAgICAgImdlbmRlciI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvR2VuZGVyIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtb2YtYmlydGgiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RhdGVPZkJpcnRoIgogICAgICAgIH0sCiAgICAgICAgImRyaXZlcnMtbGljZW5jZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRHJpdmVyc0xpY2VuY2UiCiAgICAgICAgfSwKICAgICAgICAibG9kZ2VkLWNvbXBsYWludCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTG9kZ2VkQ29tcGxhaW50IgogICAgICAgIH0sCiAgICAgICAgImlzLWRlY2Vhc2VkIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Jc0RlY2Vhc2VkIgogICAgICAgIH0sCiAgICAgICAgImRvLW5vdC1wcm92aWRlLWNyZWRpdCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRG9Ob3RQcm92aWRlQ3JlZGl0IgogICAgICAgIH0sCiAgICAgICAgIm90aGVyLWluZGljYXRvcnMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL090aGVySW5kaWNhdG9ycyIKICAgICAgICB9LAogICAgICAgICJpcy1kaXNwdXRlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1jb2RlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYnVyZWF1LXJlZmVyZW5jZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJCdXJlYXUgcmVmZXJlbmNlOyB0aGlzIGlzIGEgdW5pcXVlIGlkZW50aWZpZXIgZm9yXHR0aGF0IGluZGl2aWR1YWwuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiaW5kaXZpZHVhbC1uYW1lIiwKICAgICAgICAiZ2VuZGVyIiwKICAgICAgICAiZGF0ZS1vZi1iaXJ0aCIsCiAgICAgICAgImRyaXZlcnMtbGljZW5jZSIsCiAgICAgICAgImxvZGdlZC1jb21wbGFpbnQiLAogICAgICAgICJpcy1kZWNlYXNlZCIsCiAgICAgICAgImRvLW5vdC1wcm92aWRlLWNyZWRpdCIsCiAgICAgICAgIm90aGVyLWluZGljYXRvcnMiCiAgICAgIF0KICAgIH0sCiAgICAiUHJpbWFyeU1hdGNoIjogewogICAgICAidGl0bGUiOiAicHJpbWFyeS1tYXRjaCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAiYWxsT2YiOiBbCiAgICAgICAgewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZGVudGl0eVR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJpZC1pbmRleCI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImludDMyIgogICAgICAgICAgICB9LAogICAgICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIGlmIHRoZSBwcmltYXJ5IG1hdGNoIHJlY29yZCBpcyBhICdzdHJvbmcnIG9yICdjcmVhdGUnIG1hdGNoLiIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgIk90aGVySWRlbnRpdHkiOiB7CiAgICAgICJ0aXRsZSI6ICJvdGhlci1pZGVudGl0eSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAiYWxsT2YiOiBbCiAgICAgICAgewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZGVudGl0eVR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJpZC1pbmRleCI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImludDMyIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgIk90aGVySWRlbnRpdGllcyI6IHsKICAgICAgInRpdGxlIjogIm90aGVyLWlkZW50aXRpZXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm90aGVyLWlkZW50aXR5IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9PdGhlcklkZW50aXR5IgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJvdGhlci1pZGVudGl0eSIKICAgICAgXQogICAgfSwKICAgICJBZGRyZXNzVHlwZTg0IjogewogICAgICAidGl0bGUiOiAiYWRkcmVzc1R5cGU4NCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJDb21wbGV4VHlwZSBmb3IgYWRkcmVzcyBkZXRhaWxzXHJcblxuIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0N1cnJlbnRQcmV2aW91c1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiaXMtZGlzcHV0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAiZGlzcHV0ZS1yZXBvcnRlZC1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImZpcnN0LXJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmlyc3QgcmVwb3J0ZWQgZGF0ZSBpbiB0aGUgQnVyZWF1LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImxhc3QtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMYXN0IHJlcG9ydGVkIGRhdGUgaW4gdGhlIEJ1cmVhdS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgInByb3BlcnR5IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Qcm9wZXJ0eSIKICAgICAgICB9LAogICAgICAgICJ1bml0LW51bWJlciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJVbml0IG9yIEZsYXQgTnVtYmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdHJlZXQtbnVtYmVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0cmVldC9Ib3VzZSBOdW1iZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInN0cmVldC1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0cmVldCBOYW1lIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdHJlZXQtdHlwZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdHJlZXQgVHlwZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAic3VidXJiIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN1YnVyYiBvciBUb3duIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJzdGF0ZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQXVzdHJhbGlhblN0YXRlVHlwZSIKICAgICAgICB9LAogICAgICAgICJwb3N0Y29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJQb3N0Y29kZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiRFBJRCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImNvdW50cnktY29kZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ291bnRyeUNvZGVFbnVtVHlwZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQWRkcmVzc2VzIjogewogICAgICAidGl0bGUiOiAiYWRkcmVzc2VzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJhZGRyZXNzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkNvbnRhaW5zIGluZm9ybWF0aW9uIGFib3V0IGFuIGluc3RhbmNlIG9mIHRoZSBpbmRpdmlkdWFsJ3MgYWRkcmVzcy4iLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FkZHJlc3NUeXBlODQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImFkZHJlc3MiCiAgICAgIF0KICAgIH0sCiAgICAiRW1wbG95bWVudCI6IHsKICAgICAgInRpdGxlIjogImVtcGxveW1lbnQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVtcGxveWVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRW1wbG95ZXJUeXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlbXBsb3llciIKICAgICAgXQogICAgfSwKICAgICJDb21tZXJjaWFsQ3JlZGl0RmlsZXR5cGU5MCI6IHsKICAgICAgInRpdGxlIjogImNvbW1lcmNpYWwtY3JlZGl0LWZpbGVUeXBlOTAiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImZpbGUtbm90ZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0ZpbGVOb3RlcyIKICAgICAgICB9LAogICAgICAgICJjcmVkaXQtZW5xdWlyaWVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DcmVkaXRFbnF1aXJpZXMiCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudHMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FjY291bnRzIgogICAgICAgIH0sCiAgICAgICAgIm1lc3NhZ2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9NZXNzYWdlc1R5cGU1MSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiQ291cnRBY3Rpb25zIjogewogICAgICAidGl0bGUiOiAiY291cnQtYWN0aW9ucyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY291cnQtYWN0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluY2x1ZGVzIGRldGFpbHMgb2Ygb25lIGNvdXJ0IGFjdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ291cnRBY3Rpb250eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJjb3VydC1hY3Rpb24iCiAgICAgIF0KICAgIH0sCiAgICAiRGlzcXVhbGlmaWVkRGlyZWN0b3JzaGlwcyI6IHsKICAgICAgInRpdGxlIjogImRpc3F1YWxpZmllZC1kaXJlY3RvcnNoaXBzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkaXNxdWFsaWZpZWQtZGlyZWN0b3JzaGlwIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluY2x1ZGVzIGRldGFpbHMgb2Ygb25lIGRpc3F1YWxpZmljYXRpb24gcGVyaW9kIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9EaXNxdWFsaWZpZWREaXJlY3RvcnNoaXB0eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJkaXNxdWFsaWZpZWQtZGlyZWN0b3JzaGlwIgogICAgICBdCiAgICB9LAogICAgIkRpcmVjdG9yc2hpcHMiOiB7CiAgICAgICJ0aXRsZSI6ICJkaXJlY3RvcnNoaXBzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkaXJlY3RvcnNoaXAiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5jbHVkZXMgZGV0YWlscyBvZiBvbmUgY3VycmVudCBvciBwcmV2aW91cyBkaXJlY3RvcnNoaXAiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RpcmVjdG9yc2hpcFR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImRpcmVjdG9yc2hpcCIKICAgICAgXQogICAgfSwKICAgICJCdXNpbmVzc05hbWVzIjogewogICAgICAidGl0bGUiOiAiYnVzaW5lc3MtbmFtZXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImJ1c2luZXNzLW5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5jbHVkZXMgZGV0YWlscyBhYm91dCBvbmUgYnVzaW5lc3MgbmFtZSBoZWxkIGJ5IHRoZSBzdWJqZWN0IChwcmV2aW91c2x5IHJlZmVyZWQgdG8gYXMgcHJvcHJpZXRvcnNoaXApIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9CdXNpbmVzc05hbWV0eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJidXNpbmVzcy1uYW1lIgogICAgICBdCiAgICB9LAogICAgIlRydXN0ZWVUeXBlIjogewogICAgICAidGl0bGUiOiAidHJ1c3RlZVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJidXNpbmVzcy1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYnVzaW5lc3MtYWRkcmVzcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInBob25lLW51bWJlciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJQZXJzb25hbEluc29sdmVuY3l0eXBlIjogewogICAgICAidGl0bGUiOiAicGVyc29uYWwtaW5zb2x2ZW5jeVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgInR5cGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1R5cGUiCiAgICAgICAgfSwKICAgICAgICAiZGF0ZS1kZWNsYXJlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIHRoZSBiYW5rcnVwdGN5IHdhcyBkZWNsYXJlZCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgInRleHQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgYWRtaW5pc3RyYXRpb24gb3IgcGV0aXRpb24iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImFkbWluaXN0cmF0aW9uLWlkIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZG1pbmlzdHJhdGlvbklkdHlwZSIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1N0YXR1cyIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRlIGFzc29jaWF0ZWQgdG8gdGhlIHN0YXR1cyIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgInJlbGF0aW9uc2hpcCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVsYXRpb25zaGlwIgogICAgICAgIH0sCiAgICAgICAgImNvLWJvcnJvd2VyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbWUgb2Ygb3RoZXIgcGVyc29uIHdobyBpcyBwYXJ0IG9mIHRoZSBzYW1lIGFwcGxpY2F0aW9uL2pvaW50IGVzdGF0ZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAidHJ1c3RlZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVHJ1c3RlZVR5cGUiCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJQZXJzb25hbEluc29sdmVuY2llcyI6IHsKICAgICAgInRpdGxlIjogInBlcnNvbmFsLWluc29sdmVuY2llcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicGVyc29uYWwtaW5zb2x2ZW5jeSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmNsdWRlcyBkZXRhaWxzIG9mIG9uZSBwZXJzb25hbCBpbnNvbHZlbmN5IChwcmV2aW91c2x5IHJlZmVyZWQgdG8gYXMgYmFua3J1cHRjeSkiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1BlcnNvbmFsSW5zb2x2ZW5jeXR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInBlcnNvbmFsLWluc29sdmVuY3kiCiAgICAgIF0KICAgIH0sCiAgICAiU29sZVRyYWRlclJlZ2lzdHJhdGlvbnR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJzb2xlLXRyYWRlci1yZWdpc3RyYXRpb25UeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJpZC1yZWZlcmVuY2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JZFJlZmVyZW5jZXNUeXBlIgogICAgICAgIH0sCiAgICAgICAgIkFCTiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImFkZGl0aW9uYWwtZmllbGRzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRpdGlvbmFsRGF0YUZpZWxkc3R5cGUiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlNvbGVUcmFkZXIiOiB7CiAgICAgICJ0aXRsZSI6ICJzb2xlLXRyYWRlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAic29sZS10cmFkZXItcmVnaXN0cmF0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvU29sZVRyYWRlclJlZ2lzdHJhdGlvbnR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInNvbGUtdHJhZGVyLXJlZ2lzdHJhdGlvbiIKICAgICAgXQogICAgfSwKICAgICJQdWJsaWNSZWNvcmRPckNvbnN1bWVyQ3JlZGl0SW5mb3JtYXRpb250eXBlIjogewogICAgICAidGl0bGUiOiAicHVibGljLXJlY29yZC1vci1jb25zdW1lci1jcmVkaXQtaW5mb3JtYXRpb25UeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjb3VydC1hY3Rpb25zIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db3VydEFjdGlvbnMiCiAgICAgICAgfSwKICAgICAgICAiZGlzcXVhbGlmaWVkLWRpcmVjdG9yc2hpcHMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0Rpc3F1YWxpZmllZERpcmVjdG9yc2hpcHMiCiAgICAgICAgfSwKICAgICAgICAiZGlyZWN0b3JzaGlwcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRGlyZWN0b3JzaGlwcyIKICAgICAgICB9LAogICAgICAgICJidXNpbmVzcy1uYW1lcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQnVzaW5lc3NOYW1lcyIKICAgICAgICB9LAogICAgICAgICJwZXJzb25hbC1pbnNvbHZlbmNpZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1BlcnNvbmFsSW5zb2x2ZW5jaWVzIgogICAgICAgIH0sCiAgICAgICAgInNvbGUtdHJhZGVyIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Tb2xlVHJhZGVyIgogICAgICAgIH0sCiAgICAgICAgIm1lc3NhZ2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9NZXNzYWdlc1R5cGU1MSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY291cnQtYWN0aW9ucyIsCiAgICAgICAgImRpc3F1YWxpZmllZC1kaXJlY3RvcnNoaXBzIiwKICAgICAgICAiZGlyZWN0b3JzaGlwcyIsCiAgICAgICAgImJ1c2luZXNzLW5hbWVzIiwKICAgICAgICAicGVyc29uYWwtaW5zb2x2ZW5jaWVzIiwKICAgICAgICAic29sZS10cmFkZXIiCiAgICAgIF0KICAgIH0sCiAgICAiRW5xdWlyeVJlcG9ydHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJlbnF1aXJ5LXJlcG9ydFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInByaW1hcnktbWF0Y2giOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1ByaW1hcnlNYXRjaCIKICAgICAgICB9LAogICAgICAgICJvdGhlci1pZGVudGl0aWVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9PdGhlcklkZW50aXRpZXMiCiAgICAgICAgfSwKICAgICAgICAiYWRkcmVzc2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRyZXNzZXMiCiAgICAgICAgfSwKICAgICAgICAiZW1wbG95bWVudCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRW1wbG95bWVudCIKICAgICAgICB9LAogICAgICAgICJjb25zdW1lci1jcmVkaXQtZmlsZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ29uc3VtZXJDcmVkaXRGaWxldHlwZSIKICAgICAgICB9LAogICAgICAgICJjb21tZXJjaWFsLWNyZWRpdC1maWxlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Db21tZXJjaWFsQ3JlZGl0RmlsZXR5cGU5MCIKICAgICAgICB9LAogICAgICAgICJwdWJsaWMtcmVjb3JkLW9yLWNvbnN1bWVyLWNyZWRpdC1pbmZvcm1hdGlvbiI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUHVibGljUmVjb3JkT3JDb25zdW1lckNyZWRpdEluZm9ybWF0aW9udHlwZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicHJpbWFyeS1tYXRjaCIsCiAgICAgICAgIm90aGVyLWlkZW50aXRpZXMiLAogICAgICAgICJhZGRyZXNzZXMiLAogICAgICAgICJlbXBsb3ltZW50IgogICAgICBdCiAgICB9LAogICAgIkVycm9yVHlwZSI6IHsKICAgICAgInRpdGxlIjogImVycm9yVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJDb21wbGV4VHlwZSBmb3IgYXBwbGljYXRpb24gZXJyb3IgbWVzc2FnZXNcclxuXG4iLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZmF1bHQtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb2RlIGlkZW50aWZ5aW5nIHRoZSBlcnJvciBvciBjb25kaXRpb24iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImZhdWx0LXN0cmluZyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIdW1hbiByZWFkYWJsZSBleHBsYWluYXRpb24gb2YgdGhlIGVycm9yIG9yIGNvbmRpdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZmF1bHQtYWN0b3IiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5mb3JtYXRpb24gb24gdGhlIHN5c3RlbSByZXNwb25zaWJsZSBmb3IgdGhlIGVycm9yIG9yIGNvbmRpdGlvbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZGV0YWlsIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkFwcGxpY2F0aW9uIHNwZWNpZmljLCBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB0aGUgZXJyb3Igb3IgY29uZGl0aW9uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiRmlsZUJhblJlcG9ydHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJmaWxlLWJhbi1yZXBvcnRUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlbmQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJFbmQgZGF0ZSBvZiB0aGUgQmFuLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgInJlcG9ydGVkLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVwb3J0ZWQgZGF0ZSBvZiB0aGUgQmFuLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgImlzLWV4dGVuZGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyB3aGV0aGVyIHRoZSBCYW4gaXMgYW4gZXh0ZW5zaW9uLiIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlbmQtZGF0ZSIKICAgICAgXQogICAgfSwKICAgICJJbmRpdmlkdWFsTmFtZUlucHV0dHlwZSI6IHsKICAgICAgInRpdGxlIjogImluZGl2aWR1YWwtbmFtZS1pbnB1dFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQ29tcGxleFR5cGUgZm9yIHRoZSBlbGVtZW50cyBvZiBhbiBpbmRpdmlkdWFsJ3MgZnVsbCBuYW1lXHJcblxuIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImZhbWlseS1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZmlyc3QtZ2l2ZW4tbmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm90aGVyLWdpdmVuLW5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInRpdGxlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImZhbWlseS1uYW1lIiwKICAgICAgICAiZmlyc3QtZ2l2ZW4tbmFtZSIsCiAgICAgICAgIm90aGVyLWdpdmVuLW5hbWUiCiAgICAgIF0KICAgIH0sCiAgICAiS25vd25Bc05hbWVzIjogewogICAgICAidGl0bGUiOiAia25vd24tYXMtbmFtZXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImtub3duLWFzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvSW5kaXZpZHVhbE5hbWVJbnB1dHR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImtub3duLWFzIgogICAgICBdCiAgICB9LAogICAgIlByZXZpb3VzTmFtZXMiOiB7CiAgICAgICJ0aXRsZSI6ICJwcmV2aW91cy1uYW1lcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicHJldmlvdXMtbmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0luZGl2aWR1YWxOYW1lSW5wdXR0eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJwcmV2aW91cy1uYW1lIgogICAgICBdCiAgICB9LAogICAgIkluZGl2aWR1YWxJbnB1dHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJpbmRpdmlkdWFsLWlucHV0VHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY3VycmVudC1uYW1lIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JbmRpdmlkdWFsTmFtZUlucHV0dHlwZSIKICAgICAgICB9LAogICAgICAgICJrbm93bi1hcy1uYW1lcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS25vd25Bc05hbWVzIgogICAgICAgIH0sCiAgICAgICAgInByZXZpb3VzLW5hbWVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9QcmV2aW91c05hbWVzIgogICAgICAgIH0sCiAgICAgICAgImFkZHJlc3NlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkcmVzc2VzIgogICAgICAgIH0sCiAgICAgICAgImdlbmRlci1jb2RlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9HZW5kZXJDb2RldHlwZSIKICAgICAgICB9LAogICAgICAgICJkcml2ZXJzLWxpY2VuY2UiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RyaXZlcnNMaWNlbmNlIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtb2YtYmlydGgiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RhdGVPZkJpcnRoIgogICAgICAgIH0sCiAgICAgICAgImVtcGxveW1lbnQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0VtcGxveW1lbnQiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImN1cnJlbnQtbmFtZSIsCiAgICAgICAgImtub3duLWFzLW5hbWVzIiwKICAgICAgICAicHJldmlvdXMtbmFtZXMiLAogICAgICAgICJhZGRyZXNzZXMiLAogICAgICAgICJnZW5kZXItY29kZSIKICAgICAgXQogICAgfSwKICAgICJJbmRpdmlkdWFsSW5wdXRTdHJpY3R0eXBlIjogewogICAgICAidGl0bGUiOiAiaW5kaXZpZHVhbC1pbnB1dC1zdHJpY3RUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogInN0cmljdGVyIHZlcnNpb24gb2YgaWRlbnRpdHkgd2l0aCBtYW5kYXRvcnkgRE9CXHJcblxuIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImN1cnJlbnQtbmFtZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvSW5kaXZpZHVhbE5hbWVJbnB1dHR5cGUiCiAgICAgICAgfSwKICAgICAgICAiYWRkcmVzc2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9BZGRyZXNzZXMiCiAgICAgICAgfSwKICAgICAgICAiZ2VuZGVyLWNvZGUiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0dlbmRlckNvZGV0eXBlIgogICAgICAgIH0sCiAgICAgICAgImRhdGUtb2YtYmlydGgiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0RhdGVPZkJpcnRoIgogICAgICAgIH0sCiAgICAgICAgImtub3duLWFzLW5hbWVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Lbm93bkFzTmFtZXMiCiAgICAgICAgfSwKICAgICAgICAicHJldmlvdXMtbmFtZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1ByZXZpb3VzTmFtZXMiCiAgICAgICAgfSwKICAgICAgICAiZHJpdmVycy1saWNlbmNlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Ecml2ZXJzTGljZW5jZSIKICAgICAgICB9LAogICAgICAgICJlbXBsb3ltZW50IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbXBsb3ltZW50IgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJjdXJyZW50LW5hbWUiLAogICAgICAgICJhZGRyZXNzZXMiLAogICAgICAgICJnZW5kZXItY29kZSIsCiAgICAgICAgImRhdGUtb2YtYmlydGgiCiAgICAgIF0KICAgIH0sCiAgICAiSW5kaXZpZHVhbElucHV0RWNob3R5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJpbmRpdmlkdWFsLWlucHV0LWVjaG9UeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogInVzZWQgdG8gZWNobyBpbiB0aGUgcmVzcG9uc2UgaWRlbnRpdHkgZGV0YWlscyBwcm92aWRlZCBvbiBpbnB1dCBcclxuXG4iLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY3VycmVudC1uYW1lIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9JbmRpdmlkdWFsTmFtZUlucHV0dHlwZSIKICAgICAgICB9LAogICAgICAgICJhZGRyZXNzZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FkZHJlc3NlcyIKICAgICAgICB9LAogICAgICAgICJrbm93bi1hcy1uYW1lcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS25vd25Bc05hbWVzIgogICAgICAgIH0sCiAgICAgICAgInByZXZpb3VzLW5hbWVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9QcmV2aW91c05hbWVzIgogICAgICAgIH0sCiAgICAgICAgImRyaXZlcnMtbGljZW5jZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRHJpdmVyc0xpY2VuY2UiCiAgICAgICAgfSwKICAgICAgICAiZ2VuZGVyIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9HZW5kZXIiCiAgICAgICAgfSwKICAgICAgICAiZGF0ZS1vZi1iaXJ0aCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRGF0ZU9mQmlydGgiCiAgICAgICAgfSwKICAgICAgICAiZW1wbG95bWVudCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRW1wbG95bWVudCIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY3VycmVudC1uYW1lIiwKICAgICAgICAiYWRkcmVzc2VzIgogICAgICBdCiAgICB9LAogICAgIlBheW1lbnRUeXBlMTEyIjogewogICAgICAidGl0bGUiOiAicGF5bWVudFR5cGUxMTIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImlzLWRpc3B1dGVkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgImRpc3B1dGUtcmVwb3J0ZWQtZGF0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZSIKICAgICAgICB9LAogICAgICAgICJkaXNwdXRlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwZXJpb2QiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVwYXltZW50IHBlcmlvZCB5ZWFyIGFuZCBtb250aCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAic3RhdHVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9TdGF0dXMiCiAgICAgICAgfSwKICAgICAgICAiYmFsYW5jZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTW9uZXlUeXBlIgogICAgICAgIH0sCiAgICAgICAgInV0aWxpc2F0aW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1kYXRhLWZpZWxkcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQWRkaXRpb25hbERhdGFGaWVsZHN0eXBlIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJQb3NzaWJsZU1hdGNodHlwZSI6IHsKICAgICAgInRpdGxlIjogInBvc3NpYmxlLW1hdGNoVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaWRlbnRpdHkiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0lkZW50aXR5VHlwZSIKICAgICAgICB9LAogICAgICAgICJhZGRyZXNzZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FkZHJlc3NlcyIKICAgICAgICB9LAogICAgICAgICJlbXBsb3ltZW50IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbXBsb3ltZW50IgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJpZGVudGl0eSIKICAgICAgXQogICAgfSwKICAgICJNYXRjaENyaXRlcmlhIjogewogICAgICAidGl0bGUiOiAibWF0Y2gtY3JpdGVyaWEiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm1hdGNoLWNyaXRlcmlvbiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm1hdGNoLWNyaXRlcmlvbiIKICAgICAgXQogICAgfSwKICAgICJQb3NzaWJsZU1hdGNoZXN0eXBlIjogewogICAgICAidGl0bGUiOiAicG9zc2libGUtbWF0Y2hlc1R5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm1hdGNoLWNyaXRlcmlhIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9NYXRjaENyaXRlcmlhIgogICAgICAgIH0sCiAgICAgICAgIm1heGltdW0tbWF0Y2hlcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGdXR1cmUgVXNlIE9ubHkiLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IjogImludDMyIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJtYXRjaC1jcml0ZXJpYSIKICAgICAgXQogICAgfSwKICAgICJQZXJtaXNzaW9uVHlwZSI6IHsKICAgICAgInRpdGxlIjogInBlcm1pc3Npb24tdHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb2RlIGFzc29jaWF0ZWQgd2l0aCB0aGUgcGVybWlzc2lvbiB0eXBlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiUHJvZHVjdERhdGFMZXZlbCI6IHsKICAgICAgInRpdGxlIjogInByb2R1Y3QtZGF0YS1sZXZlbCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb2RlIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGF0YSBsZXZlbCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIkN1c3RvbUlucHV0UGFyYW1ldGVycyI6IHsKICAgICAgInRpdGxlIjogImN1c3RvbS1pbnB1dC1wYXJhbWV0ZXJzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJjdXN0b20taW5wdXQtcGFyYW1ldGVyIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkZ1dHVyZSBVc2UgT25seSIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS2V5VmFsdWVQYWlydHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY3VzdG9tLWlucHV0LXBhcmFtZXRlciIKICAgICAgXQogICAgfSwKICAgICJDb25maWd1cmF0aW9uRGF0YUF0dHJpYnV0ZXMiOiB7CiAgICAgICJ0aXRsZSI6ICJjb25maWd1cmF0aW9uLWRhdGEtYXR0cmlidXRlcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29uZmlndXJhdGlvbi1kYXRhLWF0dHJpYnV0ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJDb25maWd1cmF0aW9uIHBhcmFtZXRlciB0aGF0IGhhcyBiZWVuIGFwcGxpZWQgdG8gdGhlIHJlcXVlc3RlZCBwcm9kdWN0LiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvS2V5VmFsdWVQYWlydHlwZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY29uZmlndXJhdGlvbi1kYXRhLWF0dHJpYnV0ZSIKICAgICAgXQogICAgfSwKICAgICJQcm9kdWN0SGVhZGVydHlwZSI6IHsKICAgICAgInRpdGxlIjogInByb2R1Y3QtaGVhZGVyVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZW5xdWlyeS1pZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImRhdGV0aW1lLXJlcXVlc3RlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRldGltZSBvZiByZXF1ZXN0IGluIGNjeXktbW0tZGRUaGg6bW06c3MgZm9ybWF0LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiCiAgICAgICAgfSwKICAgICAgICAicGVybWlzc2lvbi10eXBlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9QZXJtaXNzaW9uVHlwZSIKICAgICAgICB9LAogICAgICAgICJwcm9kdWN0LWRhdGEtbGV2ZWwiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Byb2R1Y3REYXRhTGV2ZWwiCiAgICAgICAgfSwKICAgICAgICAiY3VzdG9tLWlucHV0LXBhcmFtZXRlcnMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0N1c3RvbUlucHV0UGFyYW1ldGVycyIKICAgICAgICB9LAogICAgICAgICJjb25maWd1cmF0aW9uLWRhdGEtYXR0cmlidXRlcyI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvQ29uZmlndXJhdGlvbkRhdGFBdHRyaWJ1dGVzIgogICAgICAgIH0sCiAgICAgICAgImRhdGV0aW1lLWdlbmVyYXRlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRldGltZSBvZiByZXNwb25zZSBpbiBjY3l5LW1tLWRkVGhoOm1tOnNzIGZvcm1hdC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgIH0sCiAgICAgICAgImNsaWVudC1yZWZlcmVuY2UiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ2xpZW50IHJlZmVyZW5jZSBpZCBzdXBwbGllZCBpbiB0aGUgcmVxdWVzdCBtZXNzYWdlLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAib3BlcmF0b3ItaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiT3BlcmF0b3IgKG9yIHN5c3RlbSkgaWRlbnRpZmllciB3aG8gc3VibWl0dGVkIHRoaXMgcmVxdWVzdCB0cmFuc2FjdGlvbiBzdXBwbGllZCBpbiB0aGUgcmVxdWVzdCBtZXNzYWdlLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAib3BlcmF0b3ItbmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJPcGVyYXRvciBuYW1lIHdobyBzdWJtaXR0ZWQgdGhpcyByZXF1ZXN0IHRyYW5zYWN0aW9uIHN1cHBsaWVkIGluIHRoZSByZXF1ZXN0IG1lc3NhZ2UuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwcm9kdWN0LW5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUHJvZHVjdCBOYW1lLiBEZWZpbmVkIGJ5IHNlcnZpY2UgZW5kLXBvaW50LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicHJvZHVjdC12ZXJzaW9uIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb2R1Y3QgVmVyc2lvbi4gRGVmaW5lZCBieSBzZXJ2aWNlIGVuZC1wb2ludC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInBvc3NpYmxlLW1hdGNoZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Bvc3NpYmxlTWF0Y2hlc3R5cGUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVucXVpcnktaWQiLAogICAgICAgICJkYXRldGltZS1yZXF1ZXN0ZWQiLAogICAgICAgICJwZXJtaXNzaW9uLXR5cGUiLAogICAgICAgICJwcm9kdWN0LWRhdGEtbGV2ZWwiLAogICAgICAgICJjdXN0b20taW5wdXQtcGFyYW1ldGVycyIsCiAgICAgICAgImNvbmZpZ3VyYXRpb24tZGF0YS1hdHRyaWJ1dGVzIgogICAgICBdCiAgICB9LAogICAgIlJlcXVlc3RCeUVucXVpcnlJZHR5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJyZXF1ZXN0LWJ5LWVucXVpcnktaWRUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlbnF1aXJ5LWlkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN5c3RlbSBnZW5lcmF0ZWQgdW5pcXVlIGlkIHJlbGF0ZWQgdG8gdGhpcyByZXNwb25zZSB0cmFuc2FjdGlvbi4gVGhpcyBpZCBjYW4gYmUgdXNlZCB0byBxdWVyeSB0aGUgUHJldmlvdXMgRW5xdWlyaWVzIHNlcnZpY2UgdG8gcmUtcmV0cmlldmUgdGhpcyByZXNwb25zZSBhdCBhIGxhdGVyIHRpbWUuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZW5xdWlyeS1pZCIKICAgICAgXQogICAgfSwKICAgICJTY29yZWNhcmRUeXBlIjogewogICAgICAidGl0bGUiOiAic2NvcmVjYXJkVHlwZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU2NvcmVjYXJkIGlkIHdoaWNoIHVuaXF1ZWx5IGlkZW50aWZpZXMgdGhlIHNjb3JlY2FyZC4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFtZSBvZiB0aGUgc2NvcmVjYXJkIHVzZWQgdG8gY2FsY3VsYXRlIHRoZSBzY29yZS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInZlcnNpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVmVyc2lvbiBvZiB0aGUgc2NvcmVjYXJkLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAidHlwZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVHlwZSIKICAgICAgICB9LAogICAgICAgICJkYXRhLWxldmVsIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9EYXRhTGV2ZWxUeXBlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJpZCIsCiAgICAgICAgIm5hbWUiLAogICAgICAgICJ2ZXJzaW9uIgogICAgICBdCiAgICB9LAogICAgIktleUNvbnRyaWJ1dGluZ0ZhY3RvcnMiOiB7CiAgICAgICJ0aXRsZSI6ICJrZXktY29udHJpYnV0aW5nLWZhY3RvcnMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvbnRyaWJ1dGluZy1mYWN0b3IiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgb25lIG9mIHRoZSBjb250cmlidXRpbmcgZmFjdG9ycy4iLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0NvbnRyaWJ1dGluZ0ZhY3RvcnR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImNvbnRyaWJ1dGluZy1mYWN0b3IiCiAgICAgIF0KICAgIH0sCiAgICAiU2NvcmVUeXBlIjogewogICAgICAidGl0bGUiOiAic2NvcmVUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzY29yZWNhcmQiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Njb3JlY2FyZFR5cGUiCiAgICAgICAgfSwKICAgICAgICAia2V5LWNvbnRyaWJ1dGluZy1mYWN0b3JzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9LZXlDb250cmlidXRpbmdGYWN0b3JzIgogICAgICAgIH0sCiAgICAgICAgInNjb3JlLW1hc3RlcnNjYWxlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlNjb3JlLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiaXMtZ2F0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRnV0dXJlIFVzZSBPbmx5IiwKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfSwKICAgICAgICAicmlzay1vZGRzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk9kZHMgb2YgZGVmYXVsdCBjYWxjdWxhdGVkIGFnYWluc3QgdGhlIEJ1cmVhdSBwb3B1bGF0aW9uLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiYWRkaXRpb25hbC1maWVsZHMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0FkZGl0aW9uYWxEYXRhRmllbGRzdHlwZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic2NvcmVjYXJkIiwKICAgICAgICAia2V5LWNvbnRyaWJ1dGluZy1mYWN0b3JzIiwKICAgICAgICAic2NvcmUtbWFzdGVyc2NhbGUiCiAgICAgIF0KICAgIH0sCiAgICAiR2VuZXJhbE1lc3NhZ2VzIjogewogICAgICAidGl0bGUiOiAiZ2VuZXJhbC1tZXNzYWdlcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGFuIGluc3RhbmNlIG9mIGEgZ2VuZXJhbCBtZXNzYWdlLiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvTWVzc2FnZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibWVzc2FnZSIKICAgICAgXQogICAgfSwKICAgICJFcnJvcnMiOiB7CiAgICAgICJ0aXRsZSI6ICJlcnJvcnMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoaXMgaXMgYW4gaW5zdGFuY2Ugb2YgYW4gZXJyb3IuIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FcnJvclR5cGUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdCiAgICB9LAogICAgIlRpY2tldFJlc3BvbnNldHlwZSI6IHsKICAgICAgInRpdGxlIjogInRpY2tldC1yZXNwb25zZVR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImdlbmVyYWwtbWVzc2FnZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0dlbmVyYWxNZXNzYWdlcyIKICAgICAgICB9LAogICAgICAgICJlcnJvcnMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0Vycm9ycyIKICAgICAgICB9LAogICAgICAgICJwcm9kdWN0LWhlYWRlciI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUHJvZHVjdEhlYWRlcnR5cGUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImdlbmVyYWwtbWVzc2FnZXMiLAogICAgICAgICJlcnJvcnMiCiAgICAgIF0KICAgIH0sCiAgICAiRmlsZUFjY2Vzc1JlcXVlc3R0eXBlIjogewogICAgICAidGl0bGUiOiAiZmlsZS1hY2Nlc3MtcmVxdWVzdFR5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiZmlsZS1hY2Nlc3MgZnJvbSB0aGUgaW5wdXQgYjJjIHJlcXVlc3QgcGF5bG9hZFxyXG5cbiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJmaWxlLWFjY2Vzcy1jbGllbnQtcmVmZXJlbmNlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogImNsaWVudCByZWZlcmVuY2UgYXNzb2NpYXRlZCB0byB0aGUgZmlsZS1hY2Nlc3MuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiRmlsZUFjY2Vzc3R5cGUiOiB7CiAgICAgICJ0aXRsZSI6ICJmaWxlLWFjY2Vzc1R5cGUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInNlcnZpY2UtY29kZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm1lbWJlci1zaG9ydC1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiY3JlYXRlLWRhdGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUiCiAgICAgICAgfSwKICAgICAgICAibGF0ZXN0LXVwZGF0ZS1kYXRlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlIgogICAgICAgIH0sCiAgICAgICAgInNlcnZpY2UtZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJyZWZlcmVuY2UtYWNjb3VudC1udW1iZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic2VydmljZS1jb2RlIiwKICAgICAgICAibWVtYmVyLXNob3J0LW5hbWUiCiAgICAgIF0KICAgIH0sCiAgICAiRmlsZUFjY2Vzc2VzdHlwZSI6IHsKICAgICAgInRpdGxlIjogImZpbGUtYWNjZXNzZXNUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJmaWxlLWFjY2VzcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb2xkIGRldGFpbHMgb2YgaW5kaXZpZHVhbCBmaWxlIGFjY2VzcyBpbmZvcm1hdGlvbi4iLAogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0ZpbGVBY2Nlc3N0eXBlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJSZXF1ZXN0ZWRTY29yZXMiOiB7CiAgICAgICJ0aXRsZSI6ICJyZXF1ZXN0ZWQtc2NvcmVzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzY29yZWNhcmQtaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU2NvcmVjYXJkIElkZW50aWZpZXIgLSBJbmRpY2F0ZXMgdGhlIHNjb3JlY2FyZCB0byByZXR1cm4gaW4gdGhlIHByb2R1Y3QgcmVzcG9uc2UuIE11c3QgYmUgYSBjb21wYXRpYmxlIHNjb3JlY2FyZCB0byB0aGUgcHJvZHVjdCBhbmQgcHJvZHVjdCBkYXRhIGxldmVsLiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic2NvcmVjYXJkLWlkIgogICAgICBdCiAgICB9LAogICAgIkVucXVpcnlIZWFkZXIiOiB7CiAgICAgICJ0aXRsZSI6ICJlbnF1aXJ5LWhlYWRlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicGVybWlzc2lvbi10eXBlLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIHRoZSBwZXJtaXNzaW9uIHR5cGUuIFVzZWQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgY29uc3VtZXIgYW5kL29yIGNvbW1lcmNpYWwgZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGUgcmVwb3J0LiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicHJvZHVjdC1kYXRhLWxldmVsLWNvZGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIHRoZSBwcm9kdWN0IGRhdGEgbGV2ZWwgdXNlZCB0byBjb25zdHJ1Y3QgdGhlIHJlcG9ydC4gTXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIENyZWRpdCBQcm92aWRlcidzIGRhdGEgY29udHJpYnV0aW9uIGxldmVsIGFzc2lnbmVkIGJ5IHRoZSBDcmVkaXQgUmVwb3J0aW5nIEJ1cmVhdS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInJlcXVlc3RlZC1zY29yZXMiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1JlcXVlc3RlZFNjb3JlcyIKICAgICAgICB9LAogICAgICAgICJjbGllbnQtcmVmZXJlbmNlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkNsaWVudCByZWZlcmVuY2UgaWQgcHJvdmlkZWQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcmVxdWVzdCB0cmFuc2FjdGlvbiDigJMgdGhpcyB2YWx1ZSB3aWxsIGJlIHJldHVybmVkIGJhY2sgaW4gcmVzcG9uc2UgZm9yIHRyYWNlYWJpbGl0eS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgIm9wZXJhdG9yLWlkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk9wZXJhdG9yIChvciBzeXN0ZW0pIGlkZW50aWZpZXIgc3VibWl0dGluZyB0aGlzIHJlcXVlc3QgdHJhbnNhY3Rpb24g4oCTIHRoaXMgdmFsdWUgd2lsbCBiZSByZXR1cm5lZCBiYWNrIGluIHJlc3BvbnNlIGZvciB0cmFjZWFiaWxpdHkuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJvcGVyYXRvci1uYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk9wZXJhdG9yIG5hbWUgc3VibWl0dGluZyB0aGlzIHJlcXVlc3QgdHJhbnNhY3Rpb24g4oCTIHRoaXMgdmFsdWUgd2lsbCBiZSByZXR1cm5lZCBiYWNrIGluIHJlc3BvbnNlIGZvciB0cmFjZWFiaWxpdHkuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwb3NzaWJsZS1tYXRjaGVzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Qb3NzaWJsZU1hdGNoZXN0eXBlIgogICAgICAgIH0sCiAgICAgICAgImN1c3RvbS1pbnB1dC1wYXJhbWV0ZXJzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9DdXN0b21JbnB1dFBhcmFtZXRlcnMiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInBlcm1pc3Npb24tdHlwZS1jb2RlIiwKICAgICAgICAicHJvZHVjdC1kYXRhLWxldmVsLWNvZGUiLAogICAgICAgICJyZXF1ZXN0ZWQtc2NvcmVzIgogICAgICBdCiAgICB9LAogICAgIkVucXVpcnlEYXRhIjogewogICAgICAidGl0bGUiOiAiZW5xdWlyeS1kYXRhIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlbnF1aXJ5IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FbnF1aXJ5VHlwZSIKICAgICAgICB9LAogICAgICAgICJidXJlYXUtcmVmZXJlbmNlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkJ1cmVhdSByZWZlcmVuY2U7IHRoaXMgaXMgYSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhhdCBpbmRpdmlkdWFsLiBVc2UgdGhpcyBvcHRpb24gaWYgdGhlIGluZGl2aWR1YWwgY2FuIGJlIGV4cGxpY2l0bHkgaWRlbnRpZmllZCBieSBCdXJlYXUgcmVmZXJlbmNlIHZhbHVlLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiaW5kaXZpZHVhbCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvSW5kaXZpZHVhbElucHV0dHlwZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZW5xdWlyeSIKICAgICAgXQogICAgfSwKICAgICJSZXF1ZXN0VHlwZSI6IHsKICAgICAgInRpdGxlIjogInJlcXVlc3RUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlbnF1aXJ5LWhlYWRlciI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvRW5xdWlyeUhlYWRlciIKICAgICAgICB9LAogICAgICAgICJlbnF1aXJ5LWRhdGEiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL0VucXVpcnlEYXRhIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlbnF1aXJ5LWhlYWRlciIsCiAgICAgICAgImVucXVpcnktZGF0YSIKICAgICAgXQogICAgfSwKICAgICJQcm9kdWN0RGF0YSI6IHsKICAgICAgInRpdGxlIjogInByb2R1Y3QtZGF0YSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZmlsZS1iYW4tcmVwb3J0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9GaWxlQmFuUmVwb3J0dHlwZSIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiUmVzcG9uc2VUeXBlIjogewogICAgICAidGl0bGUiOiAicmVzcG9uc2VUeXBlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJwcm9kdWN0LWRhdGEiOiB7CiAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Byb2R1Y3REYXRhIgogICAgICAgIH0sCiAgICAgICAgInByb2R1Y3QtaGVhZGVyIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9Qcm9kdWN0SGVhZGVydHlwZSIKICAgICAgICB9LAogICAgICAgICJnZW5lcmFsLW1lc3NhZ2VzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9HZW5lcmFsTWVzc2FnZXMiCiAgICAgICAgfSwKICAgICAgICAiZXJyb3JzIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9FcnJvcnMiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInByb2R1Y3QtZGF0YSIKICAgICAgXQogICAgfSwKICAgICJSZXF1ZXN0QnlFbnF1aXJ5SWQiOiB7CiAgICAgICJ0aXRsZSI6ICJyZXF1ZXN0LWJ5LWVucXVpcnktaWQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVucXVpcnktaWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3lzdGVtIGdlbmVyYXRlZCB1bmlxdWUgaWQgcmVsYXRlZCB0byB0aGlzIHJlc3BvbnNlIHRyYW5zYWN0aW9uLiBUaGlzIGlkIGNhbiBiZSB1c2VkIHRvIHF1ZXJ5IHRoZSBQcmV2aW91cyBFbnF1aXJpZXMgc2VydmljZSB0byByZS1yZXRyaWV2ZSB0aGlzIHJlc3BvbnNlIGF0IGEgbGF0ZXIgdGltZS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlbnF1aXJ5LWlkIgogICAgICBdCiAgICB9LAogICAgIlJlc3BvbnNlIjogewogICAgICAidGl0bGUiOiAicmVzcG9uc2UiLAogICAgICAiZGVzY3JpcHRpb24iOiAiIiwKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVzcG9uc2VUeXBlIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAicmVzcG9uc2UtdHlwZSI6IHsKICAgICAgICAgICAgICAiJHJlZiI6ICIjL2RlZmluaXRpb25zL1Jlc3BvbnNlVHlwZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJUaWNrZXRSZXNwb25zZSI6IHsKICAgICAgInRpdGxlIjogInRpY2tldC1yZXNwb25zZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICIiLAogICAgICAiYWxsT2YiOiBbCiAgICAgICAgewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9UaWNrZXRSZXNwb25zZXR5cGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJyZXNwb25zZS10eXBlIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXNjcmliZXMgdGhlIG5hdHVyZSBvZiB0aGUgcmVzcG9uc2UuIEZvciBhIHRpY2tldCByZXNwb25zZSwgcG9zc2libGUgdmFsdWVzIGFyZSDigJx0aWNrZXTigJ0gb3Ig4oCcZXJyb3LigJ0uIiwKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiRW5xdWlyeVJlc3BvbnNlIjogewogICAgICAidGl0bGUiOiAiRW5xdWlyeVJlc3BvbnNlIiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInJlc3BvbnNlIjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9SZXNwb25zZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicmVzcG9uc2UiCiAgICAgIF0KICAgIH0sCiAgICAiRW5xdWlyeVJlc3BvbnNlQXN5bmMiOiB7CiAgICAgICJ0aXRsZSI6ICJFbnF1aXJ5UmVzcG9uc2VBc3luYyIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJyZXNwb25zZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvVGlja2V0UmVzcG9uc2UiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInJlc3BvbnNlIgogICAgICBdCiAgICB9LAogICAgIlJldHJpZXZlRW5xdWlyeVJlc3BvbnNlQnlJRCI6IHsKICAgICAgInRpdGxlIjogInJldHJpZXZlRW5xdWlyeVJlc3BvbnNlQnlJRCIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJyZXNwb25zZSI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVzcG9uc2UiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInJlc3BvbnNlIgogICAgICBdCiAgICB9LAogICAgIkVucXVpcnlSZXF1ZXN0IjogewogICAgICAidGl0bGUiOiAiRW5xdWlyeVJlcXVlc3QiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicmVxdWVzdCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVxdWVzdFR5cGUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInJlcXVlc3QiCiAgICAgIF0KICAgIH0sCiAgICAiRW5xdWlyeVJlcXVlc3RBc3luYyI6IHsKICAgICAgInRpdGxlIjogIkVucXVpcnlSZXF1ZXN0QXN5bmMiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAicmVxdWVzdCI6IHsKICAgICAgICAgICIkcmVmIjogIiMvZGVmaW5pdGlvbnMvUmVxdWVzdFR5cGUiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInJlcXVlc3QiCiAgICAgIF0KICAgIH0sCiAgICAiUmV0cmlldmVFbnF1aXJ5UmVxdWVzdEJ5SUQiOiB7CiAgICAgICJ0aXRsZSI6ICJyZXRyaWV2ZUVucXVpcnlSZXF1ZXN0QnlJRCIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJyZXF1ZXN0IjogewogICAgICAgICAgIiRyZWYiOiAiIy9kZWZpbml0aW9ucy9SZXF1ZXN0QnlFbnF1aXJ5SWQiCiAgICAgICAgfQogICAgICB9LAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInJlcXVlc3QiCiAgICAgIF0KICAgIH0KICB9Cn0="/>
                <L7p:ResponseContentType stringValue="text/json; charset=UTF-8"/>
            </L7p:HardcodedResponse>
        </wsp:All>
    </wsp:Policy>
</exp:Export>
